window.addEventListener("beforeunload", function (e) {
    if (save_changes_detected === false) {
        return;
    }
    (e || window.event).returnValue = null;
    return null;
});

var beaver = new Logger({ storeId: storeId, prefix: "ORDER-NOTIFICATION", uuid: beaverGuid });


loadOrderNotifications();
function loadOrderNotifications() {

    hideById('newsletter_status_panel','customize_autoresponder_container')
    showAllByClass('.busy_wait_notification_status', '.busy_wait_autoreponder');

    axiosGet("/services/Orders.svc/getOrderNotifications?storeId=" + storeId).then(function(data) {
        orderNotifications = data.d || data;
        console.log(orderNotifications)

        if (orderNotifications.length > 0) {
            orderNotifications[0].enabled === 1 ? getId('notification_status_enabled').checked = true : getId('notification_status_disabled').checked = true;

            if (orderNotifications[0].attach_invoice === 1) {
                getId('autoresponder_attach').checked = true;
            }
            getId('autoresponder_email_content').value = orderNotifications[0].contents.trim();
            checkWordCount();
            if (orderNotifications[0].custom_message === 1) {
                getId('autoresponder_customize').checked = true;
                getId('autoresponder_email_subject').disabled = false;
                getId('autoresponder_email_content').disabled = false;
            } else {
                getClass('available_tag_item').classList.add('available_tag_item_disabled');
            }

            getId('autoresponder_email_subject').value = orderNotifications[0].subject;

            var bcc_list = orderNotifications[0].bcc_list.split(",");
            bcc_list.forEach(function(item) {
                var email = item.trim();
                if (typeof email !== "undefined" && email !== null && email.length > 0) {
                    buildEmailDom(email);
                }
            });
        } else {
            getId('notification_status_disabled').checked = true;
            resetAutoresponderConfirmed("2");
        }
    }).catch(function (e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function() {
        hideAllByClass('.busy_wait_notification_status', '.busy_wait_autoreponder');
        showById('newsletter_status_panel', 'customize_autoresponder_container');
    });
}

function buildEmailDom(email)
{
    var builtDiv = document.createElement('div');
    builtDiv.classList.add('list_with_button_item');
    builtDiv.setAttribute('data-email', email);
    var i = document.createElement('i');
    i.classList.add('fa');
    i.classList.add('fa-minus');
    i.setAttribute('onclick', 'removeBcc(this)');
    i.setAttribute('aria-hidden', 'true');
    var strong = document.createElement('strong');
    strong.innerText = email;
    builtDiv.appendChild(i);
    builtDiv.appendChild(strong);
    getId('additional_recipients').append(builtDiv);
    builtDiv = null;
    i = null;
    strong = null;
}

function insertTag(el) {
    var cursorPos = getId('autoresponder_email_content').selectionStart;
    var v = getId('autoresponder_email_content').value;
    var textBefore = v.substring(0, cursorPos);
    var textAfter = v.substring(cursorPos, v.length);
    getId('autoresponder_email_content').value = textBefore + el + textAfter;
    checkWordCount();
    save_changes_detected = true;
    saveChangesDetected();
}

function removeBcc(el) {
    el.parentNode.remove();
    save_changes_detected = true;
    saveChangesDetected();
}

function validateEmail(email) {
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
}

multipleEventHandler('#autoresponder_additional_recipients', 'keyup', function(e) {
    var newEmail = e.target.value;
    if (validateEmail(newEmail)) {
        getId('autoresponder_additional_recipients_button').classList.remove('button_disabled', 'has_tool_tip');
    } else {
        getId('autoresponder_additional_recipients_button').classList.add('button_disabled', 'has_tool_tip');
    }
    return false;
});

multipleEventHandler('#autoresponder_additional_recipients', 'keydown', function(e) {
    var newEmail = e.target.value;
    if ((e.keyCode || e.which) === 13) {
        e.preventDefault();
        if (validateEmail(newEmail)) {
            addNewRecipient();
        }
        return false;
    }
    return true;
});

function addNewRecipient() {
    hideByClass('alert_email_exists');
    var newEmail = getId('autoresponder_additional_recipients').value;
    var emailExists = 0;

    var strongTags = document.querySelectorAll('.list_with_button_item strong');

    [].slice.call(strongTags).forEach(function(tag) {
        var existingEmail = tag.innerText;
        if (existingEmail === newEmail) {
            emailExists++;
        }
    });

    if (emailExists >= 1) {
        showByClass('alert_email_exists');
    } else if (newEmail.length > 0 && !getId('autoresponder_additional_recipients_button').classList.contains('button_disabled')) {
        buildEmailDom(newEmail);
        getId('autoresponder_additional_recipients').value = "";
        getId('autoresponder_additional_recipients').focus();
        getId('autoresponder_additional_recipients_button').classList.add('button_disabled');

        setTimeout(function () {
            getId('autoresponder_additional_recipients_button').classList.add('has_tool_tip');
        }, 1500);

        save_changes_detected = true;
        saveChangesDetected();
    }
}

multipleEventHandler("input[name='notification_status'], input[name='autoresponder_attach']", 'click', function() {
    save_changes_detected = true;
    saveChangesDetected();
});

multipleEventHandler("input[name='autoresponder_customize']", 'click', function (e) {
    var items = document.querySelectorAll('.available_tag_item');
    if (e.target.checked) {
        getId('autoresponder_email_subject').disabled = false;
        getId('autoresponder_email_content').disabled = false;
        [].slice.call(items).forEach(function(item) {
            item.classList.remove('available_tag_item_disabled');
        });
    } else {
        getId('autoresponder_email_subject').disabled = true;
        getId('autoresponder_email_content').disabled = true;
        [].slice.call(items).forEach(function(item) {
            item.classList.add('available_tag_item_disabled');
        });
    }
    save_changes_detected = true;
    saveChangesDetected();
});

function checkWordCount() {
    var content = getId('autoresponder_email_content');
    getId('wordCount').innerText = content.value.length;
    content.value.length >= 5000 ? getId('wordCount').parentNode.classList.add('color_red') : getId('wordCount').parentNode.classList.remove('color_red');
}

multipleEventHandler('#autoresponder_email_subject, #autoresponder_email_content', 'input', function () {
    checkWordCount();
    save_changes_detected = true;
    saveChangesDetected();
});

function resetAutoresponderText() {
    divFadeIn('.modal_overlay', '.modal_autoresponder_confirmation');
}

function resetAutoresponderConfirmed(number) {
    hideByClass('modal_overlay', 'modal_autoresponder_confirmation');

    axiosGet('orders_notifications_default_text.txt').then(function(data) {
        var defaultOrderNotificationContent = data.d || data;
        getId('autoresponder_email_subject').value = "Order Confirmation: [ORDER_NUMBER]";
        getId('autoresponder_email_content').value = defaultOrderNotificationContent;
        checkWordCount();
        if (number === "1") {
            save_changes_detected = true;
            saveChangesDetected();
        }
    }).then(function() {
        document.querySelector("body").classList.remove("body_modal_is_open");
    });
}

function runSavePageLocal() {
    var saveOrderNotifications = [];
    var enabledStatus = document.querySelector("input[name='notification_status']:checked").getAttribute('id');
    enabled = +(enabledStatus === "notification_status_enabled");
    attach_invoice = +getId('autoresponder_attach').checked;
    custom_message = +getId('autoresponder_customize').checked;

    subject = parseTextAndStripPost(getId("autoresponder_email_subject").value.trim());
    subject = subject.replace(/'/g, "\\'");
    contents = parseTextAndStripPost(getId("autoresponder_email_content").value.trim());
    contents = contents.replace(/'/g, "\\'");

    var bcc_list = "";
    var strongTags = document.querySelectorAll(".list_with_button_item strong");
    [].slice.call(strongTags).forEach(function(tag) {
        var email = stripHTML(tag.innerText);
        bcc_list += ", " + email;
    });

    if (bcc_list.startsWith(", "))
        bcc_list = bcc_list.substring(2, bcc_list.length);

    saveOrderNotifications.push({ "enabled": enabled, "attach_invoice": attach_invoice, "custom_message": custom_message, "subject": subject, "contents": contents, "bcc_list": bcc_list });

    var data = { "storeId": storeId, "data": saveOrderNotifications };

    data = JSON.stringify(data);

    var returningPageName = "Emails";
    var returningPageLink = "/orders_emails.aspx";
    var currentPageLink = "/orders_notifications.aspx";
    var saveType = "post";
    var saveUrl = ['/services/Orders.svc/saveOrderNotifications', data];

   runFinalSave(returningPageName, returningPageLink, currentPageLink, saveType, saveUrl);
}

function sendTestEmail() {
	var email = getId('test_email').value;
	var data = {
		"storeId": storeId,
		"email": email
	};

    axiosPost('./services/Orders.svc/sendTestEmail', data).then(function() {
        console.log(data.d);
    }).catch(function(e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    });
}

ready(function () {
    window.onerror = function (message, source, lineno, colno, error) {
        var string = message.toLowerCase();
        var substring = "script error";
        if (string.indexOf(substring) === -1) {
            var builtMsg = [
                'Message: ' + message,
                'URL: ' + source,
                'Line: ' + lineno,
                'Column: ' + colno,
                'Error object: ' + JSON.stringify(error)
            ].join(' - ');
            beaver.error("", builtMsg);
        }
        return false;
    };
});



$('body').on('contextmenu', '#autoresponder_email_content', function () {

    var xPositionMinus = 0;

    document.getElementById("notification_email_custom_menu").className = "showcd";
    document.getElementById("notification_email_custom_menu").style.top = mouseY(event) + "px";
    document.getElementById("notification_email_custom_menu").style.left = (mouseX(event) - xPositionMinus) + "px";


    window.event.returnValue = false;
});

$(document).bind("click", function (event) {
    document.getElementById("notification_email_custom_menu").className = "hidecd";
});


function mouseX(evt) {

    if (evt.pageX) {
        return evt.pageX;
    } else if (evt.clientX) {
        return evt.clientX;
    } else {
        return null;
    }
}

function mouseY(evt) {

    if (evt.clientY) {
        return evt.clientY;
    } else if (evt.pageY) {
        return evt.pageY;
    } else {
        return null;
    }
}