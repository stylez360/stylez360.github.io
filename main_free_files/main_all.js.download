var date = moment().format("YYYY-MM");
var beaver = new Logger({ storeId: storeId, prefix: "MAIN_ALL", uuid: beaverGuid });

ready(function () {
    window.onerror = function (message, source, lineno, colno, error) {
        var string = message.toLowerCase();
        var substring = "script error";
        if (string.indexOf(substring) === -1) {
            var builtMsg = [
                'Message: ' + message,
                'URL: ' + source,
                'Line: ' + lineno,
                'Column: ' + colno,
                'Error object: ' + JSON.stringify(error)
            ].join(' - ');
            beaver.error("", builtMsg);
        }
        return false;
    };
});

ready(function () {
    loadRecentAchievements();
    loadHomepageMeta();
    hasShippingRules();
});

function hasShippingRules() {
    axiosGet('/services/manage/shipping.svc/hasShippingRules?storeId=' + storeId).then(function (data) {
        var hasShippingRules = data.d;
        if (location.pathname === "/main_free.aspx" || location.pathname === "/main_free") {
            if (hasShippingRules === false) {
                document.getElementById("dashboard_quick_links_item_setup_shipping").style.display = "flex";
                hideById("dashboard_quick_links_item_notification_messages_link");
            }
        }
    }).catch(function(e) {
        typeof beaver !== "undefined" && typeof beaver.error === "function" ? beaver.error(e) : void 0;
    }).then();
}

var recentAchievements;
function loadRecentAchievements() {
    recentAchievements = [];
    axiosGet('/services/account/Achievements.svc/LatestCheevos?storeId=' + storeId).then(function(data) {
        recentAchievements = data.d;
        if (recentAchievements.length != null) loadAllAchievements();
    });
}

var allAchievements;
function loadAllAchievements() {
    axiosGet('/services/account/Achievements.svc/GetAchievements').then(function(data) {
        allAchievements = data.d;
        allAchievements = JSON.parse(allAchievements);
        buildAchievementsListSide();
    }).catch(function(err) {
        beaver.error(err);
    });
}

var correctAchievements = [];
function buildAchievementsListSide() {
    correctAchievements = [];
    removeByQuerySelector('.recent_achievement_item');
    recentAchievements.forEach(function (ra) {
		var recentId = ra.achievementId;
		allAchievements.forEach(function (aa) {
			var allId = aa.id;
            if (recentId === allId) {
                correctAchievements.push(aa);
                return;
            }
		});
	});
	correctAchievements.forEach(function (ca) {
        getId('homepage_store_info_details_awards_inner').innerHTML += '<div class="recent_achievement_item">' +
            '<i class="fa ' + ca.icon + '" title="' + ca.name + '"></i>' +
            '</div>';
	});
}

var blogMeta;
function loadHomepageMeta() {
    axiosGet('/services/account/account.svc/loadHomePageMeta').then(function(data) {
        var meta = data.d;
        if (meta != null) {
            blogMeta = meta.blogMeta;
            getRandomDashboardBanner();
            delete blogMeta.__type;
            var cpUpdatesMeta = meta.CpUpdatesMeta;
            delete cpUpdatesMeta.__type;
            buildHomepageMeta(meta);
        }
    }).catch(function(err) {
        beaver.error(err);
    });
    var addDomainNameDashboardButtonVisible = false;
    var storeSslStatus = false;
    if (storeUrl != null) {
        if (storeUrl.length > 0) {
            if (checkUrlIsDomain(storeUrl) === true) {
                document.getElementById("dashboard_quick_links_item_domain_name").classList.remove("dashboard_quick_links_item_hidden");
                addDomainNameDashboardButtonVisible = true;
                storeSslStatus = true;
            }
        }
    }

    if (storeSslStatus === true) {
        var sslStatus = '<div class="tool_tip tool_tip_green tool_tip_left tool_tip_top_small">SSL active and secure</div><span class="homepage_store_info_details_ssl_item" data-status="active"><i class="fa fa-lock"></i> Active</span>';
        document.getElementById("homepage_store_info_details_ssl").innerHTML = sslStatus;
    } else {
        getSslStatus();
    }

    axiosGet("/services/order_checkout.svc/EnabledCheckouts?storeId=" + storeId).then(function (data) {
        var enabledCheckouts = data.d;
        if (enabledCheckouts == null || enabledCheckouts.length === 0) {
            checkIfOfflinePaymentsEnabled(addDomainNameDashboardButtonVisible);
        } else {
            if (enabledCheckouts.length > 0) {
                enabledCheckouts.filter(function (obj) {
                    
                    if (obj.merchant === "PAYPALSTANDARD") {
                        oldPaypalToNewPayPal();
                    }
                });
            }
        }
    }).catch(function (err) {
        beaver.error(err);
    });

    

}


//showPayPalConnectBanner();
var showingPayPalConnectBanner = false;
function showPayPalConnectBanner() {

    axiosGet("/services/order_checkout.svc/LoadSupportedCheckout?storeId=" + storeId).then(function (data) {
        trace('LoadSupportedCheckouts:success');
        supportedCheckouts = data.d;
        if (supportedCheckouts != null) {
            if (supportedCheckouts.ppcp === true || supportedCheckouts.ppcpcard === true) {

                axiosGet('/checkouts/paypalv2/service.svc/getCheckMerchant?storeId=' + storeId).then(function (data) {

                    var paypalRandBanner = Math.floor(Math.random() * 3) + 1;
                    var merchant = data.d;
                    if (merchant == null) {
                        showPayPalCommerceBanner(paypalRandBanner);
                        showingPayPalConnectBanner = true;
                    }
                    else if (typeof merchant === "string") {
                        try {
                            var _merchant = JSON.parse(merchant);
                            console.log(_merchant);
                            if (typeof _merchant.merchantId === "undefined" || _merchant.merchantId == null) {
                                showPayPalCommerceBanner(paypalRandBanner);
                                showingPayPalConnectBanner = true;
                            } else if (_merchant.validEmail == null || _merchant.validEmail == false) {
                                showById("dashboard_paypal_finish_setup");
                            } else if (_merchant.info != null) {
                                if (_merchant.info.payments_receivable == false) {
                                    if (_merchant.info.status.accountDenied == false) {
                                        showById("dashboard_paypal_finish_setup");
                                        document.getElementById("dashboard_paypal_finish_setup_inner_left_message").innerText = "More Information Required";
                                    }
                                }
                            }
                        } catch (Error) {
                            showPayPalCommerceBanner(paypalRandBanner);
                            showingPayPalConnectBanner = true;
                        }
                    }
                }).catch(function (err) {
                    beaver.error(err);
                }).then();
            }
        }
    }).catch(function (err) {
        beaver.error(err);
        trace('LoadSupportedCheckouts:error');
        showById("checkouts_error");
        hideById("busy_wait_checkouts_panel");
    }).then(function () {
        trace('LoadSupportedCheckouts:complete');
    });
}

function getGeoLocation() {
    return new Promise(function (resolve, reject) {
        axiosGet("/services/account/account.svc/getStoreISO2?storeId=" + storeId).then(function(data) {
            var country = data.d;
            resolve(country);
        }).catch(function() {
            resolve(null);
        }).then();
    });
}

function getSslStatus() {

    var sslStatus = '<span class="busy_wait_line"><span class="busy_wait_line_item busy_wait_line1"></span><span class="busy_wait_line_item busy_wait_line2"></span><span class="busy_wait_line_item busy_wait_line3"></span> <span class="busy_wait_line_text">Loading</span></span>';
    document.getElementById("homepage_store_info_details_ssl").innerHTML = sslStatus;

    setTimeout(function () {
        axiosGet('/services/account/domains.svc/checkSslStatus?storeId=' + storeId).then(function (data) {
            var sslCheck = data.d;
            switch (sslCheck) {
                case 0: //Failed
                    sslStatus = '<div class="tool_tip tool_tip_orange tool_tip_left tool_tip_top_small">We were unable to automatically attach your SSL.</div><span class="homepage_store_info_details_ssl_item" data-status="failed"><i class="fa fa-warning"></i> Failed</span><a onclick="requeueSSL();" class="link_color_primary marginl5">Try Again?</a>';
                    break;
                case 1: //Pending
                default:
                    sslStatus = '<div class="tool_tip tool_tip_blue tool_tip_left tool_tip_top_small">It can take up to 2 hours for SSL\'s to be installed on your primary domain name.</div><span class="homepage_store_info_details_ssl_item" data-status="pending"><i class="fa fa-spinner fa-spin"></i> Pending</span>';
                    break;
                case 2: //Success
                    sslStatus = '<div class="tool_tip tool_tip_green tool_tip_left tool_tip_top_small">SSL active and secure</div><span class="homepage_store_info_details_ssl_item" data-status="active"><i class="fa fa-lock"></i> Active</span>';
                    break;
            }
            document.getElementById("homepage_store_info_details_ssl").innerHTML = sslStatus;
            
        }).catch(function (err) {
            beaver.error(err);
            sslStatus = '<div class="tool_tip tool_tip_red tool_tip_left tool_tip_top_small">Sorry, we were unable to load your SSL status. Please click the refresh icon to try again.</div><span class="homepage_store_info_details_ssl_item" data-status="loadfail">Unknown</span><i class="fa fa-refresh homepage_store_info_details_ssl_item_retry" onclick="getSslStatus();"></i>';
            document.getElementById("homepage_store_info_details_ssl").innerHTML = sslStatus;
        });
    }, 0);
}

function checkIfOfflinePaymentsEnabled(addDomainNameDashboardButtonVisible) {

    axiosGet('/services/order_checkout.svc/getOfflineEnabled?storeId=' + storeId).then(function (data) {
        var offlineCheckouts = data.d;
        if (offlineCheckouts != null && offlineCheckouts.length > 0) {

            var offlineCheckoutsEnabled = false;
            for (var i = 0; i < offlineCheckouts.length; i++) {
                if (offlineCheckouts[i].enabled === true) {
                    offlineCheckoutsEnabled = true;
                }
            }

            if (offlineCheckoutsEnabled === false) {
                displayAddCheckoutDashboardButton(addDomainNameDashboardButtonVisible);
            }

        } else {
            displayAddCheckoutDashboardButton(addDomainNameDashboardButtonVisible);
        }
    }).catch(function (err) {
        beaver.error(err);
        displayAddCheckoutDashboardButton(addDomainNameDashboardButtonVisible);
    });

}

function displayAddCheckoutDashboardButton(addDomainNameDashboardButtonVisible) {
    document.getElementById("dashboard_quick_links_item_add_checkout").classList.remove("dashboard_quick_links_item_hidden");
    if (addDomainNameDashboardButtonVisible === true) {
        document.getElementById("dashboard_quick_links_item_notification_orders_link").classList.add("dashboard_quick_links_item_hidden");
    }
}

function buildHomepageMeta(meta) {
    var blogHtml = '<a href="' + meta.blogMeta.link + '" class="homepage_meta_item" target="_blank">';
            blogHtml += '<div class="homepage_meta_item_left">';
                blogHtml += '<div class="homepage_meta_item_image" style="background-image: url(\''+meta.blogMeta.image+'\')"></div>';
            blogHtml += '</div>';
            blogHtml += '<div class="homepage_meta_item_right">';
                blogHtml += '<div class="homepage_meta_item_title">Featured Blog</div>';
                blogHtml += '<div class="homepage_meta_item_text">'+ meta.blogMeta.title +'</div>';
            blogHtml += '</div>';
        blogHtml += '</a>';

    document.getElementById("homepage_meta").innerHTML += blogHtml;

    var cpUpdatesNow = new Date().getTime();

    if (meta.CpUpdatesMeta.createdDate != null) {

        if (meta.CpUpdatesMeta.createdDate != "") {

            var cpUpdatesDate = new Date(meta.CpUpdatesMeta.createdDate).getTime();
            if (meta.CpUpdatesMeta.displayDate != null && meta.CpUpdatesMeta.displayDate != "") {
                cpUpdatesDate = new Date(meta.CpUpdatesMeta.displayDate).getTime();
            }
        }
    }
    var cpUpdatesDifference = cpUpdatesNow - cpUpdatesDate;

    var cpUpdatesDifferenceDays = Math.floor(cpUpdatesDifference / 86400000);

    var cpUpdatesIsNew = "";
    if (cpUpdatesDifferenceDays <= 3) {
        cpUpdatesIsNew = "homepage_meta_item_title_new";
        showByClassInline("nav_footer_more_menu_cpupdates");
    }

    if (meta.CpUpdatesMeta.version != null) {
        if (meta.CpUpdatesMeta.version !== "") {
            var versionName = 'Version ' + meta.CpUpdatesMeta.version;
        } else {
            var versionName = "Control Panel Updates Live";
        }
    }

    var updateHtml = '<a href="/support_cp_updates.aspx" class="homepage_meta_item">';
            updateHtml += '<div class="homepage_meta_item_left">';
                updateHtml += '<i class="fa fa-file-text-o homepage_meta_item_icon background_primary" aria-hidden="true"></i>';
            updateHtml += '</div>';
            updateHtml += '<div class="homepage_meta_item_right">';
                updateHtml += '<div class="homepage_meta_item_title"><span class="'+cpUpdatesIsNew+'">CP Updates</span></div>';
                updateHtml += '<div class="homepage_meta_item_text">' + versionName +'</div>';
            updateHtml += '</div>';
    updateHtml += '</a>';

    document.getElementById("homepage_meta").innerHTML += updateHtml;

    

}

function loadAppsDataPreset() {

	getId('homepage_apps_title').innerHTML = "5 Most Popular Apps";

    var appsData = [
        {
            "appId": "notification-bar",
            "developerId": "freewebstore",
            "name": "Notification Bar"
        },
        {
            "appId": "facebook-shops",
            "developerId": "freewebstore",
            "name": "Facebook Shops"
        },
        {
            "appId": "google-shopping",
            "developerId": "freewebstore",
            "name": "Google Shopping"
        },
        {
            "appId": "messenger-chat",
            "developerId": "freewebstore",
            "name": "Messenger Chat"
        },
        {
            "appId": "instagram-gallery",
            "developerId": "freewebstore",
            "name": "Instagram Gallery"
        }
    ]

    buildAppData(appsData);
	showById('homepage_apps_container');
	hideByClass('busy_wait_main_app_list');
}

function buildAppData(appsData) {
    var i = 0;
    var p = 0;
    do {

        if (businessUser === 1 && appsData[i].appId === "startup-pack") {

        } else {
			getId('homepage_apps_list').innerHTML += '<a class="homepage_apps_list_item" href="/appstore/appstore_item.aspx?appid=' + appsData[i].appId + '">' +
                ' <div class="homepage_apps_list_item_number">' + (p + 1) + '.</div>' +
                '<img src="//d11fdyfhxcs9cr.cloudfront.net/design_media/freewebstore/appstore/' + appsData[i].developerId + '/' + appsData[i].appId + '/icon.jpg?v=5" alt="App Icon: ' + appsData[i].name + '" onerror=\"this.src =\'/images/products/product-not-exist.jpg\';\" />' +
                '<div class="homepage_apps_list_item_name">' + appsData[i].name + '</div>' +
                '<div class="homepage_apps_list_item_view">View</div>' +
                '</a>';
            p++;
        }
        i++;
    }
    while (p < 5);
}

var recentHistory;
function loadRecentHistory() {
	axiosGet("/services/Events.svc/GetRecentHistoryFeed?storeId=" + storeId).then(function (data) {
        recentHistory = data.d || data;
        recentHistory = JSON.parse(recentHistory);
		if (recentHistory.length > 0) buildRecentHistory();
        else getId('homepage_recent_history').innerHTML += '<div class="homepage_recent_history_zero">Your recent history will appear here once it is available!</div>';
    }).catch(function (err) {
        beaver.error(err);
		getId('homepage_recent_history').innerHTML += '<div class="homepage_recent_history_zero">Your recent history will appear here once it is available!</div>';
	}).then(function () { 
		hideByClass("busy_wait_main_quick_links");
		showById('homepage_recent_history');
	});
}

function buildRecentHistory() {

	recentHistory.forEach(function (rh) {
		var icon = '';
        var link = '';
        var title = '';
        var titleAction = rh.eventAction.toLowerCase();

        switch (rh.eventType) {
            case "SupportTicket":
                title = "Support Ticket";
                icon = "envelope";
                link = "support_supportthread.aspx?tid=" + rh.eventJobID;
                break;
            case "Order":
                title = "Order";
                icon = "shopping-basket";
                link = "orders_item.aspx?oid=" + rh.eventJobID;
                break;
            case "Customer":
                title = "Customer";
                icon = "users";
                link = "orders_customers_view?cid=" + rh.eventJobID;
                break;
            case "Product":
                title = "Product";
                icon = "archive";
                link = "manage_products_editv2.aspx?prodid=" + rh.eventJobID;
                break;
            case "ControlPanelSection":
                title = "Page";
                icon = "file";
                link = rh.eventJobID;
                break;
        }
        var recentHistoryHtml = '';
        recentHistoryHtml += '<a href="' + link + '" class="homepage_recent_history_item" title="' + rh.message + '">';
        recentHistoryHtml += '<i class="fa fa-' + icon + ' background_primary" aria-hidden="true"></i>';
        recentHistoryHtml += '<div class="homepage_recent_history_item_text_container">';
        recentHistoryHtml += '<strong class="color_primary">' + titleAction + ' ' + title + '</strong>';
        recentHistoryHtml += '<span>' + rh.message + '</span>';
        recentHistoryHtml += '</div>';
        recentHistoryHtml += '</a>';

        getId("homepage_recent_history").innerHTML += recentHistoryHtml;
	});
}

function requeueSSL() {
    document.querySelector("#homepage_store_info_details_ssl > a").remove();
    axiosGet('./services/account/domains.svc/reQueueDomainForSSL?storeId=' + storeId).then(function(response) {
        var success = response.d;
        if (success) {
            requeueSSL = function () { }
            var sslStatus = '<div class="tool_tip tool_tip_blue tool_tip_left tool_tip_top_small">It can take up to 2 hours for SSL\'s to be installed on your primary domain name.</div><span class="homepage_store_info_details_ssl_item" data-status="pending"><i class="fa fa-spinner fa-spin"></i> Pending</span>';
            document.getElementById("homepage_store_info_details_ssl").innerHTML = sslStatus;
        }
        getSslStatus();
    }).catch(function(err) {
        beaver.error(err);
    });
}