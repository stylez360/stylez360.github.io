
function loadBillingV2AddNewCardSection() {
    divFadeIn(".overlay_forced");
    loadBillingV2AddPaymentMethodCard();
}

function testApp() {
    console.log("testApp");
    var info = {
        "case": "4a",
        "appId": "checkout-paypal"
    }
    billingV2Instructions(info);
}

function testSubscription() {
    console.log("testSubscription");
    var info = {
        "case": "2",
        "packageType": 9,
        "packagePeriod": 1 // Annual
    }
    billingV2Instructions(info);
}

function onTheSpotUpgrade(requestedPackage) {

    axiosGet("/services/billing/billing.svc/OnTheSpotUpgrade?storeId=" + storeId).then(function (data) {

        var onTheSpotUpgrade = data.d || data;

        var isAnnualAttr = false;
        if (onTheSpotUpgrade.annual == true) {
            isAnnualAttr = true;
            $("#billing_subscription_period_toggle1").attr("checked", true);
        } else {
            $("#billing_subscription_period_toggle0").attr("checked", true);
        }

        var packageTypeId = onTheSpotUpgrade.packageTypeId
        packageTypeId = packageTypeId.toString();

        if (isAnnualAttr === false) {
            isAnnualAttr = 0;
        } else {
            isAnnualAttr = 1;
        }

        if (requestedPackage != null) {
            packageTypeId = requestedPackage;
            console.log("Here")
        }

        selectPackage(packageTypeId, isAnnualAttr);

    }).catch(function () {

    }).then(function () {

    });

}

function testDomain() {
    console.log("Test Domain");
    var info = {
        "case": "3",
        "domain": "www.domain.co.uk"
    }
    billingV2Instructions(info);
}

function selectPackage(packageTypeId, isAnnualAttr) {

    var info = {
        "case": "2",
        "packageType": packageTypeId,
        "packagePeriod": isAnnualAttr
    }
    console.log(info)
    billingV2Instructions(info);

}

function selectPackageTrial(packageTypeId, isAnnualAttr, packageTrial) {

    var trial = false;
    if (packageTrial != null) {
        trial = packageTrial;
    } else {
        trial = false;
    }

    var info = {
        "case": "2",
        "packageType": packageTypeId,
        "packagePeriod": isAnnualAttr,
        "trial": packageTrial
    }
    console.log(info)
    billingV2Instructions(info);

}

function depositCredit(amount) {
    var info = {
        "case": "8",
        "amount": amount
    }
    console.log(info)
    billingV2Instructions(info);
}

var billingV2InstructionsAll;
var billingV2InstructionsCase;
function billingV2Instructions(info) {

    $(".modal_links, .modal_doverlay, .modal_x_button, .modal_upgrade_information, .modal_upgrade_information_force").hide();

    billingV2InstructionsAll = info;
    billingV2InstructionsCase = info.case;

    switch (billingV2InstructionsCase) {
        case "1a":
            // Single Payment: Invoice
            loadBillingV2Case1a(info);
            break;
        case "2":
            // Create Subscription
            loadBillingV2Case2(info);
            break;
        case "3":
            // Purchase Domain
            loadBillingV2Case3(info);
            break;
        case "4a":
            // Install App
            loadBillingV2Case4a(info);
            break;
        case 5:
            // Update Card Billing Address
            loadBillingV2Case5(info);
            break;
        case 6:
            // Add Payment Method
            loadBillingV2Case6();
            break;
        case "7":
            // Restrictred
            loadBillingV2Case7(info);
            break;
        case "8":
            // Credit Deposit
            loadBillingV2Case8(info);
            break;
        case "9":
            // Buy Domain Name (new)
            loadBillingV2Case9(info);
    }

}



// Single Payment: Invoice
function loadBillingV2Case1a(info) {
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}

// Create Subscription
function loadBillingV2Case2(info) {
    console.log("2")
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}

// Purchase Domain
function loadBillingV2Case3(info) {
    console.log("3");
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}

// Install App
function loadBillingV2Case4a(info) {
    console.log("4")
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}

// Update Card Billing Address
function loadBillingV2Case5(info) {

    document.querySelector(".billingv2_translatable[data-translation='4']").innerText = "Confirm Update";
    document.querySelector(".billingv2_translatable[data-translation='5']").innerText = "Update Billing Details";
    document.querySelector(".billingv2_translatable[data-translation='6']").innerText = "Loading Billing Details";

    hideById("modal_billingv2_add_new_card_container");
    showByClass("busy_wait_billingv2_add_new_card");
    divFadeIn(".overlay_forced", ".modal_billingv2_add_new_card");

    buildBillingV2Case5(info);

}

// Add New Payment Method
function loadBillingV2Case6() {

    // Translations
    document.querySelector(".billingv2_translatable[data-translation='1']").innerText = "What type of payment method would you like to add?";
    document.querySelector(".billingv2_translatable[data-translation='2']").innerText = "Add Card";
    document.querySelector(".billingv2_translatable[data-translation='3']").innerText = "Or";
    document.querySelector(".billingv2_translatable[data-translation='4']").innerText = "Add Card";

    billingv2BackToNoCardsInVault();

}

function loadBillingV2Case7(info) {
    console.log("7")
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}


// Credit Deposit
function loadBillingV2Case8(info) {
    console.log("8")
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}

// Purchase Domain (new)
function loadBillingV2Case9(info) {
    console.log("9");
    if (typeof buildBillingV2Overview === "function") {
        buildBillingV2Overview();
    } else {
        buildBillingV2OverviewRetry();
    }
}


var buildBillingV2OverviewRetryCount = 0;
function buildBillingV2OverviewRetry() {

    buildBillingV2OverviewRetryCount++;

    if (!location.href.match("localhost:")) {
        if (typeof user !== "undefined") {
            if (user.isSupport != true) {
                var beaverSearch = new Logger({ storeId: storeId, prefix: "BILLING-LOAD-FAIL", uuid: beaverGuid });
                beaverSearch.warn("Failed to load billing modal: " + buildBillingV2OverviewRetryCount);
            }
        }
    }

    setTimeout(function () {

        if (typeof buildBillingV2Overview === "function") {
            if (!location.href.match("localhost:")) {
                if (typeof user !== "undefined") {
                    if (user.isSupport != true) {
                        var beaverSearch = new Logger({ storeId: storeId, prefix: "BILLING-LOAD-FAIL", uuid: beaverGuid });
                        beaverSearch.warn("SUCCESS");
                    }
                }
            }
            buildBillingV2Overview();
        } else {
            if (buildBillingV2OverviewRetryCount < 5) {
                buildBillingV2OverviewRetry();
            } else {
                if (!location.href.match("localhost:")) {
                    if (typeof user !== "undefined") {
                        if (user.isSupport != true) {
                            var beaverSearch = new Logger({ storeId: storeId, prefix: "BILLING-LOAD-FAIL", uuid: beaverGuid });
                            beaverSearch.warn("COMPLETE FAILURE");
                        }
                    }
                }
            }
        }

    }, 1500);

}





function loadBillingV2() {
    console.log("Load Billing V2");

    divFadeIn(".overlay_forced", ".modal_billingv2");
    showByClass("busy_wait_billingv2");
    hideById("modal_billingv2_list_payment_methods_error", "modal_billingv2_check_vat_error");
    document.getElementById("busy_wait_billingv2_text").innerText = "Checking VAT Status";

    // Check their VAT Status
    axiosGet('/services/settingsv2/settings_pricing.svc/VATInformation?storeId=' + storeId).then(function (data) {
        var check = data.d;
        console.log(check);

        //Operated in GB (Not VAT Registered)
        //Please take a moment to notify us of your VAT status.

        if (check != null && check.VATStatus != null) {
            if (check.VATStatus == "Please take a moment to notify us of your VAT status.") {
                billingV2OpenVatModal();
            } else {
                billingv2CheckPaymentMethods();
            }
        } else {
            billingV2OpenVatModal();
        }

    }).catch(function () {
        showById("modal_billingv2_check_vat_error");
        hideByClass("busy_wait_billingv2");
    }).then(function () {

    });


}

var billingv2ListMethods;

function billingv2CheckPaymentMethods() {

    showByClass("busy_wait_billingv2");
    hideById("modal_billingv2_list_payment_methods_error", "modal_billingv2_check_vat_error");
    document.getElementById("busy_wait_billingv2_text").innerText = "Loading Payment Methods";

    // Check to see if we have any payment methods
    axiosGet('/services/billing/billingv2.svc/ListPaymentMethods?storeId=' + storeId).then(function (data) {
        trace("ListPaymentMethods:Success");

        billingv2ListMethods = data.d || data;
        billingv2ListMethods = JSON.parse(billingv2ListMethods)

        console.log(billingv2ListMethods);

        if (billingv2ListMethods.length > 0) {
            loadBillingV2PaymentVault(billingv2ListMethods);
        } else {
            loadBillingV2AddPaymentMethod();
        }

    }).catch(function () {
        trace("ListPaymentMethods:Error");

        showById("modal_billingv2_list_payment_methods_error");

    }).then(function () {
        trace("ListPaymentMethods:Complete");
        hideByClass("busy_wait_billingv2");
    });

}

var billingV2ClientId;
var getBillingClientId = new Promise(function (resolve, reject) {
    axiosGet('/services/billing/billingv2.svc/getBillingClient?storeId=' + storeId).then(function (data) {
        billingV2ClientId = data.d;
        if (billingV2ClientId != null && billingV2ClientId.token != null && billingV2ClientId.token.length > 0) {
            resolve(billingV2ClientId.token, billingV2ClientId.merchantAccountId);
        } else {
            reject(null);
        }

    }).catch(function () {
        reject(null);
    }).then(function () {

    });

});


