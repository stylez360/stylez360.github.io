var storeUsername;
var storeEmailAddress;
var storeCreatedDate;
var storePrimaryUrl;
var user;

function getUserV2(cognitoIdToken, ridgeToken) {
    trace('getUserV2');

    var data = {
        cognitoIdToken: cognitoIdToken,
        ridgeToken: ridgeToken
    }

    var url = "/services/user/GetUserV2.svc/GetUserRequest";

    var data = JSON.stringify(data);
    axiosPost(url, data).then(function(res) {
        user = JSON.parse(res);

        try {
            if (user.userName !== "undefined") {
                if (user.userName != null && user.userName.length > 0) {
                    $("#master_user_name, .master_user_name").html("" + user.userName.split(" ")[0]);
                }
            }
            
        }
        catch (err) {
        }
		if (user.isSupport) {
            $("<div class='logged_in_as_support'><i class='fa fa-exclamation-triangle'></i> You are logged in as support!</div>").insertAfter("#nav_logo_container");
			$(".header_account_button_info").css("display", "block");
			$(".header_account_xfuncs").css("display", "block");
            return;
        }
        storeUsername = user.userName;
        storeEmailAddress = user.email;            
        if (user.stores.length > 1) $("#master_store_switch").css("display", "block"); 
        else $("#master_store_switch").hide();
    }).catch(function(err) {
        $("#master_store_switch").hide();
    });
    if (subscriptionLapsed === "True") {
        $("<div class='logged_in_as_support'><i class='fa fa-exclamation-triangle'></i> Subscription Lapsed</div>").insertAfter("#nav_logo_container");
    }
}

var buildSwitchAccountModalBool = false;
function buildSwitchAccountModal() {

    if (buildSwitchAccountModalBool === false) {
        $(".switch_accounts").html("");

        var newMarkup = "";

        $.each(user.stores, function () {

			safeUrl = this.url.replace(/^https?:\/\//gm, '');
            if (this.verified)
                if (this.sid == storeId) {
                    newMarkup += "<div class=\"switch_accounts_item switch_accounts_item_active\">";
                    storeCreatedDate = this.created;
                    storePrimaryUrl = this.url;
                } else {
                    newMarkup += "<div class=\"switch_accounts_item\">";
                }
            else
                newMarkup += "<div class=\"switch_accounts_item switch_accounts_item_not_verified\">";



            newMarkup += "<a href=\"" + this.url + "\" target=\"_blank\" class=\"switch_accounts_item_link\"><i class=\"fa fa-external-link\" aria-hidden=\"true\"></i></a>";
            newMarkup += "<div class='switch_accounts_info'><div class=\"switch_accounts_item_name\">" + this.name + "</div>";
            newMarkup += "<div class=\"switch_accounts_item_url\">" + safeUrl + "</div>";

            if (this.sid == storeId) {
                newMarkup += "<a class=\"button button_primary\">This account</a></div>";
            }
            else if (this.verified && this.isRidge !== null) {
                newMarkup += "<a class=\"button button_white_blue switchStoreButton\" data-id=\"" + this.sid + "\" onclick=\"switchStore(" + this.sid + ");\">Switch</a>";
                newMarkup += "<div class='alert alert_switch_accounts' data-id=\"" + this.sid + "\">Sorry, we were unable to switch accounts.</br >Please try again!</div></div>"
            }
            else if (!this.verified && this.isRidge !== null) {
                newMarkup += "<a class=\"button button_red switchStoreButton\" onclick='RequestActivation(" + this.sid + ")'>Not Verified</a></div>";
            } else {
                newMarkup += "<a class=\"button button_white_blue switchStoreButton\" onclick=\"location.href=\'https://admin.freewebstore.org/Login.aspx\'\">Visit Control Panel v1</a></div>";
            }
 
            newMarkup += "<div class='switch_accounts_item_image_container'><img src=\"/GetStoreThumb.aspx?sid=" + this.sid + "\" class=\"switch_accounts_item_image\" onerror=\"this.src=\'/images/products/product-not-exist.jpg\';\" alt='"+ this.name +"' /></div>";
            

            newMarkup += "</div>";
        });

        $(".switch_accounts").html(newMarkup);

        // Make the current account the top of the list
        $('.switch_accounts').prepend($('.switch_accounts_item_active'));

        buildSwitchAccountModalBool = true;

    }

    divFadeIn(modalOverlay, ".modal_switch_accounts");
}


function buildCreateNewStoreModal() {

    hideById("modal_create_new_store2");
    hideById("modal_create_new_store3");
    hideById("modal_create_new_store4");
    showById("modal_create_new_store1");
    showById("modal_create_new_store_button");

    document.getElementById("create_new_store_input_name").value = "";
    document.getElementById("create_new_store_input_password").value = "";
    document.getElementById("create_new_store_input_password").setAttribute("type", "password");
    document.getElementById("modal_create_new_store_button").classList.add("button_disabled");

    hideByClass("alert_create_new_store_input_name");
    hideByClass("alert_create_new_store_input_ascii");

    divFadeIn(".modal_create_new_store", ".modal_overlay");

}

function createNewStoreChange() {

    var createNewStoreName = stripHTML(document.getElementById("create_new_store_input_name").value.trim());
    var createNewStorePassword = stripHTML(document.getElementById("create_new_store_input_password").value.trim());

    var enableCreateStoreButton = 0;

    if (createNewStoreName.length < 6) {
        $("#create_new_store_input_name").addClass("input_alert");
        $(".alert_create_new_store_input_name").text("Store name must be at least 6 characters long").show();
        enableCreateStoreButton++;
    } else {
        $("#create_new_store_input_name").removeClass("input_alert");
        $(".alert_create_new_store_input_name").text("").hide();
    }

    if (createNewStorePassword == 0) {
        enableCreateStoreButton++;
        $("#create_new_store_input_password").addClass("input_alert");
        $(".alert_create_new_store_input_password").text("Please enter your current password").show();
    } else {
        $("#create_new_store_input_password").removeClass("input_alert");
        $(".alert_create_new_store_input_password").text("").hide();
    }

    if (enableCreateStoreButton > 0) {
        document.getElementById("modal_create_new_store_button").classList.add("button_disabled");
    } else {
        document.getElementById("modal_create_new_store_button").classList.remove("button_disabled");
    }
}

function createNewStoreCheckASCII(str) {
    return /^[\x00-\x7F]*$/.test(str);
}

function createNewStoreButtonModal() {

    document.getElementById("modal_create_new_store_button").classList.add("button_disabled");

    var createNewStoreName = stripHTML(document.getElementById("create_new_store_input_name").value.trim());
    
    if (createNewStoreName.length < 6) {
        $("#create_new_store_input_name").addClass("input_alert");
        $(".alert_create_new_store_input_name").text("Store name must be at least 6 characters long").show();
        return false;
    } else {
        $("#create_new_store_input_name").removeClass("input_alert");
        $(".alert_create_new_store_input_name").text("").hide();
    }

    createNewStoreName = createNewStoreName.replace(/\s/g, '-');
    document.getElementById("create_new_store_input_name").value = createNewStoreName;
    createNewStoreName = createNewStoreName.replace(/[^\x00-\x7F]/g, "");
    document.getElementById("create_new_store_input_name").value = createNewStoreName;

    console.log(createNewStoreName);

    if (!createNewStoreCheckASCII(createNewStoreName)) {
        $("#create_new_store_input_name").addClass("input_alert");
        $(".alert_create_new_store_input_name_ascii").text("Use ASCII Characters Only, Please.  You can change this later in your Control Panel.").show();
        return false;
    } else {

        if (createNewStoreName.length < 6) {
            $("#create_new_store_input_name").addClass("input_alert");
            $(".alert_create_new_store_input_name").text("Store name must be at least 6 characters long").show();
            return false;
        } else {
            $("#create_new_store_input_name").removeClass("input_alert");
            $(".alert_create_new_store_input_name").text("").hide();
            createNewStoreButtonModal2(createNewStoreName);
        }

    }
}

function createNewStoreButtonModal2(createNewStoreName) {

    var createNewStorePassword = stripHTMLPost(document.getElementById("create_new_store_input_password").value.trim());

    if (createNewStorePassword.length == 0) {
        $("#create_new_store_input_password").addClass("input_alert");
        $(".alert_create_new_store_input_password").text("Please enter your current password").show();
        return false;
    } else {
        $("#create_new_store_input_password").removeClass("input_alert");
        $(".alert_create_new_store_input_password").text("").hide();

        // Run Ajax
        hideById("modal_create_new_store1");
        showById("modal_create_new_store2");
        showByClass("busy_wait_modal_create_new_store2");

		axiosPost("/services/account/account.svc/createNewStore", JSON.stringify({ storeId: storeId, newStoreName: createNewStoreName, pw: createNewStorePassword })).then(function (data) {
			var createNewStoreResult = data.d || data;
			hideById("modal_create_new_store2");
			if (createNewStoreResult == "Wrong Password") {
				showById("modal_create_new_store1");
				$("#create_new_store_input_password").addClass("input_alert");
				$(".alert_create_new_store_input_password").text("The password you entered was incorrect. Please enter your current password.").show();

			} else if (createNewStoreResult == "Something happened") {
				showById("modal_create_new_store4");
				hideById("modal_create_new_store_button");
			} else {
				showById("modal_create_new_store3");
				hideById("modal_create_new_store_button");
			}
		}).catch(function () {
			hideById("modal_create_new_store2");
            showById("modal_create_new_store4");
            hideById("modal_create_new_store_button");
		});
    }
}