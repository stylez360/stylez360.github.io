var beaver = new Logger({ storeId: storeId, prefix: "ORDERS-VIEW-LIST", uuid: beaverGuid });
var orderstartpg;
var ordersSelected = new Array();
var cookieGetImageSize;
var orders;
var sort;
var filters = new Array();
var paginationTotalItems;
var paginationPageStart;
var paginationShowAll;

var ordersInFluxUpdate = new Array();
var ordersInFluxDelete = new Array();

$(document).ready(function () {

    var url_string = window.location.href;
    var url = new URL(url_string);
    var isNewOrder = url.searchParams.get("isNew");

    //tags
    //LoadOrderTags(); Done from code behind

    var orderTagsHtml = '';

    for (var i = 0; i < orderTags.length; i++) {

        var orderTagsEdit = '';

        if (orderTags[i].editable === 1) {
            orderTagsEdit = '<i onclick="orderTagEdit(\'' + orderTags[i].id + '\')" class="fa fa-pencil" aria-hidden="true"></i>'
        }

        var orderTagsItem = '<div id="tag_' + orderTags[i].id + '" class="order_tags_item" style="background-color:' + orderTags[i].colour + '" data-color="' + orderTags[i].colour + '">';
            orderTagsItem += '<span onclick="orderTagSelect(\'' + orderTags[i].id + '\', \'' + orderTags[i].colour + '\')">' + orderTags[i].tag + '</span>';
            orderTagsItem += orderTagsEdit;
            orderTagsItem += '</div>';

        orderTagsHtml += orderTagsItem;

    }

    document.querySelector(".order_tags").innerHTML += orderTagsHtml;


    // Cookie Start Page
    if (Cookies.get('fwsOrderListStart_'+storeId)) {
        orderstartpg = Cookies.get('fwsOrderListStart_' + storeId);
    } else {
        orderstartpg = 0;
    }

    if (orderstartpg == null || orderstartpg == "undefined" || orderstartpg == "NaN") {
        orderstartpg = 0;
    }

    // Cookie Size
    if (Cookies.get('fwsOrdersSize_' + storeId)) {
        cookieGetOrderSize = Cookies.get('fwsOrdersSize_' + storeId);
        $("#dlSize option[data-size='" + cookieGetOrderSize + "']").attr("selected", "selected");
    } else {
        $("#dlSize option[data-size='10']").attr('selected', 'selected');
        cookieGetOrderSize = 10;
    }

    if (cookieGetOrderSize == null || cookieGetOrderSize == "undefined") {
        cookieGetOrderSize = 10;
    }

    if (Cookies.get('fwsOrderListSorts_' + storeId)) {
        cookieGetOrderSort = Cookies.get('fwsOrderListSorts_' + storeId);

        if (cookieGetOrderSort === "created") { $("#dlSort option[value='created']").attr('selected', 'selected'); }
        if (cookieGetOrderSort === "createddesc") { $("#dlSort option[value='createddesc']").attr('selected', 'selected'); }
        if (cookieGetOrderSort === "orderno") { $("#dlSort option[value='orderno']").attr('selected', 'selected'); }
        if (cookieGetOrderSort === "ordernodesc") { $("#dlSort option[value='ordernodesc']").attr('selected', 'selected'); }

    }

    if (Cookies.get('fwsOrderListViews_' + storeId)) {
        $("input[name='order_list_attributes_item']").prop('checked', false);
        var listJson = Cookies.get("fwsOrderListViews_"+storeId);
        var listObj = JSON.parse(listJson);
        console.log("fwsOrderListViews")

        if (listObj.tags === "true") { $("input[id='order_list_attributes_item0']").prop('checked', true); }
        if (listObj.status === "true") { $("input[id='order_list_attributes_item1']").prop('checked', true); }
        if (listObj.method === "true") { $("input[id='order_list_attributes_item2']").prop('checked', true); }
        if (listObj.dispatch === "true") { $("input[id='order_list_attributes_item13']").prop('checked', true); }
        if (listObj.orderno === "true") { $("input[id='order_list_attributes_item3']").prop('checked', true); }
        if (listObj.date === "true") { $("input[id='order_list_attributes_item4']").prop('checked', true); }
        if (listObj.name === "true") { $("input[id='order_list_attributes_item5']").prop('checked', true); }
        if (listObj.net === "true") { $("input[id='order_list_attributes_item6']").prop('checked', true); }
        if (listObj.discount === "true") { $("input[id='order_list_attributes_item7']").prop('checked', true); }
        if (listObj.tax === "true") { $("input[id='order_list_attributes_item8']").prop('checked', true); }
        if (listObj.postage === "true") { $("input[id='order_list_attributes_item9']").prop('checked', true); }
        if (listObj.postagetax === "true") { $("input[id='order_list_attributes_item10']").prop('checked', true); }
        if (listObj.total === "true") { $("input[id='order_list_attributes_itemlast']").prop('checked', true); }
        if (listObj.cleandate === "true") { getId('order_list_attributes_cleandate').checked = true; }
    }

    $("input[name='order_list_attributes_item']").click(function () {
        var tags = { tags: "false" };
        var status = { status: "false" };
        var dispatch = { dispatch: "false" };
        var method = { method: "false" };
        var orderno = { orderno: "false" };
        var date = { date: "false" };
        var name = { name: "false" };
        var net = { net: "false" };
        var discount = { discount: "false" };
        var tax = { tax: "false" };
        var postage = { postage: "false" };
        var postagetax = { postagetax: "false" };
        var total = { total: "false" };
        var cleanDate = { cleandate: 'false' };

        if ($("input[id='order_list_attributes_item0']").is(":checked")) { var tags = { tags: "true" }; }
        if ($("input[id='order_list_attributes_item1']").is(":checked")) { var status = { status: "true" }; }
        if ($("input[id='order_list_attributes_item13']").is(":checked")) { var dispatch = { dispatch: "true" }; }
        if ($("input[id='order_list_attributes_item2']").is(":checked")) { var method = { method: "true" }; }
        if ($("input[id='order_list_attributes_item3']").is(":checked")) { var orderno = { orderno: "true" }; }
        if ($("input[id='order_list_attributes_item4']").is(":checked")) { var date = { date: "true" }; }
        if ($("input[id='order_list_attributes_item5']").is(":checked")) { var name = { name: "true" }; }
        if ($("input[id='order_list_attributes_item6']").is(":checked")) { var net = { net: "true" }; }
        if ($("input[id='order_list_attributes_item7']").is(":checked")) { var discount = { discount: "true" }; }
        if ($("input[id='order_list_attributes_item8']").is(":checked")) { var tax = { tax: "true" }; }
        if ($("input[id='order_list_attributes_item9']").is(":checked")) { var postage = { postage: "true" }; }
        if ($("input[id='order_list_attributes_item10']").is(":checked")) { var postagetax = { postagetax: "true" }; }
        if ($("input[id='order_list_attributes_itemlast']").is(":checked")) { var total = { total: "true" }; }
        if (getId('order_list_attributes_cleandate').checked) { var cleandate = { cleandate: 'true' }; }

        var listFilterJson = $.extend(tags, status, dispatch, method, orderno, date, name, net, discount, tax, postage, postagetax, total, cleandate);
        Cookies.set('fwsOrderListViews_' + storeId, listFilterJson);

        if ($("input[id='order_list_attributes_item0']").is(":checked")) {
            $(".list_table_tags, .table_header_titles_tags").removeClass("list_table_hidden");
        } else {
            $(".list_table_tags, .table_header_titles_tags").addClass("list_table_hidden");
        }

        /*if ($("input[id='order_list_attributes_item1']").is(":checked")) {
            $(".list_table_status, .table_header_titles_status").removeClass("list_table_hidden");
        } else {
            $(".list_table_status, .table_header_titles_status").addClass("list_table_hidden");
        }*/

        if ($("input[id='order_list_attributes_item13']").is(":checked")) {
            $(".list_table_dispatch, .table_header_titles_dispatch").removeClass("list_table_hidden");
        } else {
            $(".list_table_dispatch, .table_header_titles_dispatch").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item2']").is(":checked")) {
            $(".list_table_paymentmethod, .table_header_titles_paymentmethod").removeClass("list_table_hidden");
        } else {
            $(".list_table_paymentmethod, .table_header_titles_paymentmethod").addClass("list_table_hidden");
        }

        /*if ($("input[id='order_list_attributes_item3']").is(":checked")) {
            $(".list_table_ordernumber, .table_header_titles_ordernumber").removeClass("list_table_hidden");
        } else {
            $(".list_table_ordernumber, .table_header_titles_ordernumber").addClass("list_table_hidden");
        }*/

        /*if ($("input[id='order_list_attributes_item4']").is(":checked")) {
            $(".list_table_date, .table_header_titles_date").removeClass("list_table_hidden");
        } else {
            $(".list_table_date, .table_header_titles_date").addClass("list_table_hidden");
        }*/

        /*if ($("input[id='order_list_attributes_item5']").is(":checked")) {
            $(".list_table_customername, .table_header_titles_customername").removeClass("list_table_hidden");
        } else {
            $(".list_table_customername, .table_header_titles_customername").addClass("list_table_hidden");
        }*/

        if ($("input[id='order_list_attributes_item6']").is(":checked")) {
            $(".list_table_net, .table_header_titles_net").removeClass("list_table_hidden");
        } else {
            $(".list_table_net, .table_header_titles_net").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item7']").is(":checked")) {
            $(".list_table_discount, .table_header_titles_discount").removeClass("list_table_hidden");
        } else {
            $(".list_table_discount, .table_header_titles_discount").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item8']").is(":checked")) {
            $(".list_table_tax, .table_header_titles_tax").removeClass("list_table_hidden");
        } else {
            $(".list_table_tax, .table_header_titles_tax").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item9']").is(":checked")) {
            $(".list_table_shipping, .table_header_titles_shippingcost").removeClass("list_table_hidden");
        } else {
            $(".list_table_shipping, .table_header_titles_shippingcost").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item10']").is(":checked")) {
            $(".list_table_shippingtax, .table_header_titles_shippingtax").removeClass("list_table_hidden");
        } else {
            $(".list_table_shippingtax, .table_header_titles_shippingtax").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_itemlast']").is(":checked")) {
            $(".list_table_total, .table_header_titles_total").removeClass("list_table_hidden");
        } else {
            $(".list_table_total, .table_header_titles_total").addClass("list_table_hidden");
        }
    });

    $("input[id='order_list_attributes_item0']").click(function () {

        if ($("input[id='order_list_attributes_item0']").is(":checked")) {
            trace('User is requesting tags (after the fact). Reload required');

            orderstartpg = 0;
            LoadOrders();
        }
    });

    multipleEventHandler('#order_list_attributes_cleandate', 'click', function() {
        sortDate();
    });

    $("input[id='order_list_attributes_item5']").click(function () {

        if ($("input[id='order_list_attributes_item5']").is(":checked")) {
            trace('User is requesting customer names (after the fact). Reload required');

            orderstartpg = 0;
            LoadOrders();
        }
    });


    if (Cookies.get('fwsOrderListApplyTypes_' + storeId)) {

        var listPCPJson = Cookies.get("fwsOrderListApplyTypes_"+storeId);
        var listPCPObj = JSON.parse(listPCPJson);
        filterTypes = listPCPObj;

        document.querySelector(".tab_nav_item.selected").classList.remove("selected");

        console.log(filterTypes)
        if (isNewOrder != "true") {
            switch (filterTypes) {
                case 0:
                    document.querySelector(".tab_nav_item[data-tab='1']").classList.add("selected");
                    break;
                case 1:
                    document.querySelector(".tab_nav_item[data-tab='2']").classList.add("selected");
                    break;
                case 2:
                    document.querySelector(".tab_nav_item[data-tab='3']").classList.add("selected");
                    break;
                case 3:
                    document.querySelector(".tab_nav_item[data-tab='4']").classList.add("selected");
                    break;
                default:
                    document.querySelector(".tab_nav_item[data-tab='1']").classList.add("selected");
                    break;
            }
        }

    }

    if (Cookies.get('fwsOrderListApplyFilters_' + storeId)) {

        filters = Cookies.get("fwsOrderListApplyFilters_" + storeId);

        filters = JSON.parse(filters);
        if (isNewOrder != "true") {
            $.each(filters, function (i) {
                var cookieFilterTag = orderTags.filter(function(obj) {
                    return obj.id === filters[i];
                });
                if (cookieFilterTag != null && cookieFilterTag != undefined && cookieFilterTag.length > 0) {
                    $("#applied_tags").append('<a class="button applied_tags_button_item" data-id="' + cookieFilterTag[0].id + '" style="background-color: ' + cookieFilterTag[0].colour + '" id="tag_' + cookieFilterTag[0].id + '" onclick="removeAppliedTag(\'' + cookieFilterTag[0].id + '\')"><i class="fa fa-trash-o" aria-hidden="true"></i>' + cookieFilterTag[0].tag + '</a>');
                } else {
                    var filterIndex = filters.indexOf(filters[i]);
                    if (filterIndex > -1) {
                        filters.splice(filterIndex, 1);
                    }
                }
                
            });

            if ($("#applied_tags a").length > 0) {
                $("#applied_tags").slideDown();
            }
        }
    }

    if (isNewOrder != "true") {
        LoadOrders();
    } else {
        ordersShowNew();
    }
    

});

function ordersShowNew() {
    $("#dlSort").val("createddesc");
    document.querySelector(".tab_nav_item[data-tab='1']").classList.add("selected");
    document.getElementById("applied_tags").innerHTML += '<a class="button applied_tags_button_item" data-id="new" style="background-color: #20B7E6" id="tag_new" onclick="removeAppliedTag(\'new\')"><i class="fa fa-trash-o" aria-hidden="true"></i>New</a>';
    showById("applied_tags");
    filters = ["new"];
    LoadOrders();
}

function ordersPageSizeChange() {
    cookieGetOrderSize = document.getElementById("dlSize").value;
    Cookies.set('fwsOrdersSize_' + storeId, cookieGetOrderSize);
    orderstartpg = 0;
    Cookies.set('fwsOrderListStart_' + storeId, orderstartpg);
    LoadOrders();
}

function ordersPageSortChange() {
    var cookieSort = document.getElementById("dlSort").value;
    Cookies.set('fwsOrderListSorts_' + storeId, cookieSort);
    orderstartpg = 0;
    Cookies.set('fwsOrderListStart_' + storeId, orderstartpg);
    LoadOrders();
}

function orderStatusSelect(which) {

    document.querySelector(".tab_nav_item.selected").classList.remove("selected");

    if (which === "1") {
        Cookies.set('fwsOrderListApplyTypes_' + storeId, "1");
        document.querySelector(".tab_nav_item[data-tab='2']").classList.add("selected");
    }
    else if (which === "2") {
        Cookies.set('fwsOrderListApplyTypes_' + storeId, "2");
        document.querySelector(".tab_nav_item[data-tab='3']").classList.add("selected");
    } else if (which === "3") {
        Cookies.set('fwsOrderListApplyTypes_' + storeId, "3");
        document.querySelector(".tab_nav_item[data-tab='4']").classList.add("selected");
    } else {
        Cookies.set('fwsOrderListApplyTypes_' + storeId, "0");
        document.querySelector(".tab_nav_item[data-tab='1']").classList.add("selected");
    }

    orderstartpg = 0;
    LoadOrders();

}

function rebuildPaginationorder(paginationRebuildNumber) {
    orderstartpg = parseInt($(paginationRebuildNumber).attr("data-pagnum"));
    orderstartpg = orderstartpg * cookieGetOrderSize;
    trace('setting startPage to:' + orderstartpg);
    Cookies.set('fwsOrderListStart_'+storeId, orderstartpg);
    LoadOrders();
}


function LoadOrders() {
    $(".busy_wait_order_list, .busy_wait_order_list2").show();
    $(".lists_table_items, .pagination_text_results, .pagination_number_results").remove();
    $("#lists_orders_table, .zero_orders, .overlimit, .overlimit_panel, .order_lists_types").hide();

    sort = $("#dlSort").val();

    var status = "";

    var whichType = document.querySelector(".tab_nav_item.selected").getAttribute("data-tab");

    if (whichType == "1") {
        status = "all";
    }
    else if (whichType == "2") {
        status = "open";
    }
    else if (whichType == "3") {
        status = "closed";
    } else if (whichType == "4") {
        status = "problem";
    }

    var fields = "";

    //we need to request certain fields if we wish to use them
    if ($("input[id='order_list_attributes_item0']").is(":checked")) { fields += "tags,"; }
    if ($("input[id='order_list_attributes_item5']").is(":checked")) { fields += "customer,"; }

    //remove the last comma
    fields = fields.replace(/,\s*$/, "");

    //let's see if any tags are being filtered...
    var tags = "";

    if (filters != null) {
        for (var i = 0; i < filters.length; i++) {
            tags += filters[i] + ",";
        }
    }

    //remove the last comma
    tags = tags.replace(/,\s*$/, "");

    console.log("Fields: " + fields);
    console.log("Tags: " + tags)

    console.log("orderstartpg: " + orderstartpg);
    axiosGet("/services/Orders.svc/listOrdersNew?storeId=" + storeId + "&sort=" + sort + "&status=" + status + "&limit=" + $("#dlSize").val() + "&fields=" + fields + "&tags=" + tags + "&offset=" + orderstartpg).then(function (data) {
        orders = data.d;
        paginationDataType = "order";
        paginationDataFound = orders.found;

        ordersInFluxUpdate = new Array();
        ordersInFluxDelete = new Array();

        // Checks page cookie issue
        if (orders.count > 0 && orders.orders.length == 0) {
            orderstartpg = 0;
            LoadOrders();
        }

    }).catch(function (e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function () {
        $(".busy_wait_order_list, .busy_wait_order_list2").hide();
        if (orders != null) {
            LoadOrderList();
            $("#total_orders_display_container").show();
            $("#total_orders_display").text(orders.found);
            $(".order_lists_types").show();

            if (orders.matched === 0) {
                $(".zero_orders").show();
                $("#lists_orders_table").hide();
            } else {
                $(".zero_orders").hide();
                $("#lists_orders_table").show();



                paginationPageStart = orderstartpg / cookieGetOrderSize;
                paginationPageStart = Math.ceil(paginationPageStart);
                paginationShowAll = false;

                pagination(orders.count, $("#dlSize").val(), paginationPageStart, paginationShowAll);
            }
        } else {
            $(".zero_orders").show();
            $(".table_container .lists_table_container, #lists_orders_table").hide();
        }

        if (orders.found == 0) {
            showById("orders_no_orders_ever");
            hideById("orders_everything");
            $(".table_container .lists_table_container, #lists_orders_table, #orders_search_panel, #orders_filters_panel").hide();
        } else {
            showById("orders_search_panel", "orders_filters_panel");
        }

        
    });
}

function getTag(tagid) {
    //trace('Get tag for:'+tagid);
    var result = $.grep(orderTags, function (e) { return e.id == tagid; });
    if (result.length == 0) {
        //console.log("Tag not found for [" + tagid + "]!");
        return null;
    } else if (result.length > 0) {
        return result[0];
    }
}

function getTagByText(tagtext) {

    var result = $.grep(orderTags, function (e) { return e.tag === tagtext; });

    if (result.length == 0) {
        // not found
        console.log("Tag not found for [" + tagtext + "]!");
        return null;
    } else if (result.length > 0) {
        // access the foo property using result[0].foo
        return result[0];
    }
}

function LoadOrderList() {
    if (orders != null && orders.orders != undefined) {

        var ordersSelectedCount = 0;
        $("#lists_selectall").prop("checked", false);

        $.each(orders.orders, function () {

            var id = this.id;

            var isPPCPOrder = this.method.toLowerCase() === "ppcp" || this.method.toLowerCase() === "ppcpcard";

            if (isPPCPOrder) {
                if (this.status === 1) {
                    var status = "<div class='list_table_status list_table_status_open'><span onclick='orderStatusSelect(\"1\")'>Open</span></div>";
                } else if (this.status === 2) {
                    var status = "<div class='list_table_status list_table_status_closed' onclick='orderStatusSelect(\"2\")'><span>Closed</span></div>";
                } else if (this.status === 4) {
                    var status = "<div class='list_table_status list_table_status_other' onclick='orderStatusSelect(\"3\")'><span>Pending</span></div>";
                } else if (this.status === 5) {
                    var status = "<div class='list_table_status list_table_status_other' onclick='orderStatusSelect(\"3\")'><span>Partial Refund</span></div>";
                } else if (this.status === 9) {
                    var status = "<div class='list_table_status list_table_status_other' onclick='orderStatusSelect(\"3\")'><span>Denied</span></div>";
                } else if (this.status === 13) {
                    var status = "<div class='list_table_status list_table_status_other' onclick='orderStatusSelect(\"3\")'><span>Refunded</span></div>";
                } else {
                    var status = "<div class='list_table_status list_table_status_problem' onclick='orderStatusSelect(\"3\")'><span>Problem</span></div>";
                }
            } else {
                if (this.status === 1) {
                    var status = "<div class='list_table_status list_table_status_open'><span onclick='orderStatusSelect(\"1\")'>Open</span></div>";
                } else if (this.status === 2) {
                    var status = "<div class='list_table_status list_table_status_closed' onclick='orderStatusSelect(\"2\")'><span>Closed</span></div>";
                } else {
                    var status = "<div class='list_table_status list_table_status_problem' onclick='orderStatusSelect(\"3\")'><span>Problem</span></div>";
                }
            }

            

            var tags = "";
            var allCurrentTags = new Array();

            for (var i = 0; i < this.tags; i++) {

                var mytag = getTag(this.tags[i]);
                if (mytag !== null) {
                    allCurrentTags.push({ "id": mytag.id })
                    tags += "<span onclick='orderTagSelect(\"" + mytag.id + "\", \"" + mytag.colour + "\")' style='background-color:" + mytag.colour + "' data-color='" + mytag.colour + "'data-tagID='" + mytag.id + "'>" + mytag.tag + "</span>";
                }

            }

            $.each(this.tags, function (key, value) {

                var mytag = getTag(value);
                if (mytag !== null) {
                    allCurrentTags.push({ "id": mytag.id })
                    tags += "<span onclick='orderTagSelect(\"" + mytag.id + "\", \"" + mytag.colour + "\")' style='background-color:" + mytag.colour + "' data-color='" + mytag.colour + "'data-tagID='" + mytag.id + "'>" + mytag.tag + "</span>";
                }
            });

            var method = "";
            if (this.method == "PAYPAL" || this.method == "paypal")
                var method = "PayPal";
            else if (this.method == "PPCP")
                var method = "PayPal";
            else if (this.method == "Check" || this.method == "Cheque" || this.method == "Bank Transfer" || this.method == "Pay by Check" || this.method == "PREPOST" || this.method == "CONFIRM" || this.method == "GCheckout" || this.method == "Pay by Bank Transfer" || this.method == "Collect in Store")
                var method = "Other";
            else if (this.method == "Ogone")
                var method = "ingenico";
            else if (this.method == "EPDQ")
                var method = "barclaycard";
            else if (this.method == "MoneyBookers")
                var method = "skrill";
            else if (this.method == "OTHER")
                var method = "Other";
			else if (this.method == "PPCPCARD" || this.method == "ppcpcard" || this.method == "PPCPCard")
				var method = "paypalcard";
            else
                var method = this.method;


            
            var checked = '';

            for (var i = 0; i < ordersSelected.length; i++) {
                if (id === ordersSelected[i]) {
                    ordersSelectedCount++;
                    checked = 'checked';
                    break;
                }
            }

            var dispatch = '<div class="order_dispatch_button has_tool_tip" onclick="LoadOrderDispatchIconButton(\''+this.id+'\');"><span class="tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small">The dispatch email for this order has <strong>NOT</strong> been sent. Click to send the dispatch email.</span><i class="fa fa-envelope-o" aria-hidden="true"></i></div>';
            if (this.isdispatched) {
                dispatch = '<div class="order_dispatch_button has_tool_tip order_dispatch_button_active" onclick="LoadOrderDispatchIconButton(\'' + this.id +'\');"><span class="tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small">The dispatch email for this order <strong>HAS</strong> been sent.</span><i class="fa fa-envelope-o" aria-hidden="true"></i></div>';
            }

            var orderUpdating = false;
            var orderDeleting = false;

            var orderViewButtonFinal = "<div title='Order Number' class='order_number'>" + this.orderno + "</div><a href='orders_item.aspx?oid=" + this.id + "' class='button button_white'>View</a>";

            if (this.flux != null) {
                if (this.flux.action == "MODIFY") { //this.flux.action == "INSERT"
                    orderUpdating = true;
                    ordersInFluxUpdate.push(id.toString());
                    checkFluxChangeStart();
                }
                if (this.flux.action == "REMOVE") {
                    orderUpdating = true;
                    orderDeleting = true;
                    ordersInFluxDelete.push(id.toString());
                    orderViewButtonFinal = "<a class='button button_red'>Deleting</a>";
                }
            }

            var orderViewButton = "<td class='list_table_url'>" +
                orderViewButtonFinal +
                "<div class='list_table_url_error has_tool_tip' data-id='" + this.id + "'><span class='tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small tool_tip_left'>Oops! The operation failed please try again</span><i class='fa fa-exclamation-triangle color_yellow'></i></div>" +
                "<div class='list_table_url_updating has_tool_tip' data-id='" + this.id + "'><span class='tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small tool_tip_left'>Updating Order ~ 1min</span><i class='fa fa-spinner fa-spin'></i></div>" +
                "</td>";

            var html = "<tr class='lists_table_items' data-name='" + this.id + "' data-id='" + this.id + "' data-updating='" + orderUpdating + "'>" +
                "<td class='table_checkbox_small'>" +
                "<div class='checkbox_container'>" +
                "<input type='checkbox' onclick='order_list_check(this);' data-id='" + this.id + "' class='lists_checkbox' id='lists_select" + this.id + "' "+checked+" />" +
                "<label for='lists_select" + this.id + "'></label>" +
                "</div>" +
                "</td>" +
                orderViewButton +
                "<td class='list_table_tags' id='tags_list_" + this.id + "'>" + tags + "</td>" +
                "<td class='list_table_order'>" +
                    status +
                    "<div title='Name: " + this.deliveryname +"'><strong>" + this.deliveryname + "</strong></div>" +
                "<div id='item_date_" + this.id + "' data-cleandate='" + getDefaultDateString(this.created, orders.locale) + "' data-prettydate='" + GetOrderDateString(this.created, orders.locale) + "'></div>" +
                "</td> " +
                "<td class='list_table_dispatch'>" + dispatch + "</td>" +
                "<td class='list_table_paymentmethod'><img data-src='images/checkouts/" + method + ".png' alt='" + method + "' title='" + method + "' onerror=\"this.src=\'/images/checkouts/other.png\';\" class='lazyload' /></td>" +
                /*"<td class='list_table_date'>" + GetDateString(this.created) + "</td>" +*/
                /*"<td class='list_table_customername'><strong>" + this.deliveryname + "</strong></td>" +*/
                "<td class='list_table_net' data-currency='true'>" + this.net + "</td>" +
                "<td class='list_table_discount' data-currency='true'>" + this.discount + "</td>" +
                "<td class='list_table_tax' data-currency='true'>" + this.tax + "</td>" +
                "<td class='list_table_shipping' data-currency='true'>" + this.postage + "</td>" +
                "<td class='list_table_shippingtax' data-currency='true'>" + this.postagetax + "</td>" +
                "<td class='list_table_total' data-currency='true'>" + this.total + "</td>" +
                "</tr>";

            $("#lists_orders_table tbody").append(html);
        });
        sortDate();
        UpdatePriceStrings();

        if ($("input[id='order_list_attributes_item0']").is(":checked")) {
            $(".list_table_tags, .table_header_titles_tags").removeClass("list_table_hidden");
        } else {
            $(".list_table_tags, .table_header_titles_tags").addClass("list_table_hidden");
        }

        /*if ($("input[id='order_list_attributes_item1']").is(":checked")) {
            $(".list_table_status, .table_header_titles_status").removeClass("list_table_hidden");
        } else {
            $(".list_table_status, .table_header_titles_status").addClass("list_table_hidden");
        }*/

        if ($("input[id='order_list_attributes_item13']").is(":checked")) {
            $(".list_table_dispatch, .table_header_titles_dispatch").removeClass("list_table_hidden");
        } else {
            $(".list_table_dispatch, .table_header_titles_dispatch").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item2']").is(":checked")) {
            $(".list_table_paymentmethod, .table_header_titles_paymentmethod").removeClass("list_table_hidden");
        } else {
            $(".list_table_paymentmethod, .table_header_titles_paymentmethod").addClass("list_table_hidden");
        }

        /*if ($("input[id='order_list_attributes_item3']").is(":checked")) {
            $(".list_table_ordernumber, .table_header_titles_ordernumber").removeClass("list_table_hidden");
        } else {
            $(".list_table_ordernumber, .table_header_titles_ordernumber").addClass("list_table_hidden");
        }*/

        /*if ($("input[id='order_list_attributes_item4']").is(":checked")) {
            $(".list_table_date, .table_header_titles_date").removeClass("list_table_hidden");
        } else {
            $(".list_table_date, .table_header_titles_date").addClass("list_table_hidden");
        }*/

        /*if ($("input[id='order_list_attributes_item5']").is(":checked")) {
            $(".list_table_customername, .table_header_titles_customername").removeClass("list_table_hidden");
        } else {
            $(".list_table_customername, .table_header_titles_customername").addClass("list_table_hidden");
        }*/

        if ($("input[id='order_list_attributes_item6']").is(":checked")) {
            $(".list_table_net, .table_header_titles_net").removeClass("list_table_hidden");
        } else {
            $(".list_table_net, .table_header_titles_net").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item7']").is(":checked")) {
            $(".list_table_discount, .table_header_titles_discount").removeClass("list_table_hidden");
        } else {
            $(".list_table_discount, .table_header_titles_discount").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item8']").is(":checked")) {
            $(".list_table_tax, .table_header_titles_tax").removeClass("list_table_hidden");
        } else {
            $(".list_table_tax, .table_header_titles_tax").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item9']").is(":checked")) {
            $(".list_table_shipping, .table_header_titles_shippingcost").removeClass("list_table_hidden");
        } else {
            $(".list_table_shipping, .table_header_titles_shippingcost").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_item10']").is(":checked")) {
            $(".list_table_shippingtax, .table_header_titles_shippingtax").removeClass("list_table_hidden");
        } else {
            $(".list_table_shippingtax, .table_header_titles_shippingtax").addClass("list_table_hidden");
        }

        if ($("input[id='order_list_attributes_itemlast']").is(":checked")) {
            $(".list_table_total, .table_header_titles_total").removeClass("list_table_hidden");
        } else {
            $(".list_table_total, .table_header_titles_total").addClass("list_table_hidden");
        }

        if (ordersSelectedCount == $("#dlSize").val()) {
            $("#lists_selectall").prop("checked", true);
            $(".table_hidden_buttons_section").show();
        }

        if (ordersSelected.length > 0) {
            $(".table_hidden_buttons_section").show();
        }

        if (ordersSelected.length > 1) {
            hideById("dropdown_menu_view_single");
        } else {
            showById("dropdown_menu_view_single");
        }

        if (ordersSelected.length > 10) {
            hideById("dropdown_print_invoice");
            hideById("dropdown_download_invoice");
        } else {
            showById("dropdown_print_invoice");
            showById("dropdown_download_invoice");
        }

    } else {
        $(".zero_orders").show();
        $("#lists_orders_table").hide();
    }

}

function sortDate() {
    var el = getId('order_list_attributes_cleandate');
    var items = document.querySelectorAll('#lists_orders_table > tbody > tr > td.list_table_order > div:nth-child(3)');
    [].slice.call(items).forEach(function (item) {
        var text = item.getAttribute(el.checked ? 'data-cleandate' : 'data-prettydate');
        item.innerText = text;
        item.setAttribute('title', item.getAttribute(el.checked ? 'data-prettydate' : 'data-cleandate'));
        delete text;
    });
}

function UpdatePriceStrings() {
    var elements = jQuery('*').filter(function () { return jQuery(this).data('currency') !== undefined; });

    jQuery(elements).each(function (index) {

        if (jQuery(this).is("input"))
            jQuery(this).val(accounting.formatMoney(jQuery(this).val(), currency_options));
        else
            jQuery(this).html(accounting.formatMoney(jQuery(this).html(), currency_options));
    });
}

function cleanOrderDate(when) {

    var then = moment(when, moment.ISO_8601);

    return then._d;
}

function getDefaultDateString(when, locale) {
    return new Date(when).toLocaleString(locale || 'en-GB',
    {
        dateStyle: 'medium', // i.e. 24 Nov 2020
        timeStyle: 'medium', // i.e. 10:47:57 GMT
        hour12: true
    });
}


function GetOrderDateString(when, locale, timezone) {
    var then = moment(when, moment.ISO_8601);
    var now = moment(new Date());
    var duration = moment.duration(now.diff(then));
    var days = duration.asDays();
    var hours = duration.asHours();
    var mins = duration.asMinutes();
    var userDate;

    if (mins < 1)
        userDate = "Just now";
    else if (hours < 1)
        userDate = Math.round(mins) + " mins ago";
    else if (days < 1)
        userDate = Math.round(hours) + " hours ago";
    else if (days < 8)
        userDate = then.calendar();
    else
        userDate = new Date(when).toLocaleString(locale || 'en-GB',
        {
            dateStyle: 'medium', // i.e. 24 Nov 2020
            timeStyle: 'medium', // i.e. 10:47:57 GMT
            hour12: true
        });

    return userDate;
}

function orderTagSelect(tagid, tagcolour) {

    var tag = getTag(tagid);
    var found = false;

    if (filters.length > 0) {
        for (var i = 0; i < filters.length; i++) {
            if (filters[i] == tagid) {
                found = true;
            }
        }
    }

    if (!found) {
        trace('filter not found - creating it....');

        filters.push(tag.id);

        // Add filter to Cookie
        if (Cookies.get('fwsOrderListApplyFilters_' + storeId)) {
            var existingCookieFilters = Cookies.get("fwsOrderListApplyFilters_" + storeId);
            existingCookieFilters = JSON.parse(existingCookieFilters);
            existingCookieFilters.push(tag.id);
            Cookies.set('fwsOrderListApplyFilters_' + storeId, existingCookieFilters);
        } else {
            Cookies.set('fwsOrderListApplyFilters_' + storeId, [tag.id]);
        }

        document.getElementById("applied_tags").innerHTML += '<a class="button applied_tags_button_item" data-id="' + tag.id + '" style="background-color: ' + tagcolour + '" id="tag_' + tag.id + '" onclick="removeAppliedTag(\'' + tag.id + '\')"><i class="fa fa-trash-o" aria-hidden="true"></i>' + tag.tag + '</a>';
        showById("applied_tags");

        orderstartpg = 0;
        Cookies.set('fwsOrderListStart_' + storeId, orderstartpg);
        LoadOrders();
    }

    
}

function removeAppliedTag(tagid) {

    if (document.querySelector("#applied_tags #tag_" + tagid) != null) {
        if (tagid == "new") {
            window.history.replaceState({}, "", "orders_view_list");
        }

        // Remove tag from local filter array
        var filtersArrayIndex = filters.indexOf(tagid);
        if (filtersArrayIndex > -1) {
            filters.splice(filtersArrayIndex, 1);
        }

        // Remove tag from Cookie Filter array
        if (Cookies.get('fwsOrderListApplyFilters_' + storeId)) {
            var existingCookieFilters = Cookies.get("fwsOrderListApplyFilters_" + storeId);
            existingCookieFilters = JSON.parse(existingCookieFilters);
            var existingFiltersArrayIndex = existingCookieFilters.indexOf(tagid);
            if (existingFiltersArrayIndex > -1) {
                existingCookieFilters.splice(existingFiltersArrayIndex, 1);
            }
            Cookies.set('fwsOrderListApplyFilters_' + storeId, existingCookieFilters);
        }

        document.querySelector("#applied_tags #tag_" + tagid).remove();

        if (!document.querySelector("#applied_tags a")) {
            hideById("applied_tags");
        }

        orderstartpg = 0;
        LoadOrders();
    }

}



$(document).ready(function () {

    $('#lists_selectall').click(function () {
        if (this.checked) {
            $('.lists_checkbox:checkbox').each(function () {
                this.checked = true;
                
                var orderId = $(this).attr("data-id");
                var orderCount = 0;
                $.each(ordersSelected, function (i) {
                    if (this == orderId) {
                        orderCount++;
                        return;
                    }
                });
                if (orderCount == 0) {
                    ordersSelected.push(orderId);
                }
                
            });
        }
        else {
            $('.lists_checkbox:checkbox').each(function () {
                this.checked = false;
                var orderId = $(this).attr("data-id");
                $.each(ordersSelected, function (i) {
                    if (this == orderId) {
                        ordersSelected.splice(i, 1);
                    }
                });
            });
        }

        if (ordersSelected.length >= 1) {
            document.querySelector(".table_hidden_buttons_section").style.display = "block";
        } else {
            document.querySelector(".table_hidden_buttons_section").style.display = "none";
        }

        if (ordersSelected.length > 1) {
            hideById("dropdown_menu_view_single");
        } else {
            showById("dropdown_menu_view_single");
        }

        if (ordersSelected.length > 10) {
            hideById("dropdown_print_invoice");
            hideById("dropdown_download_invoice");
        } else {
            showById("dropdown_print_invoice");
            showById("dropdown_download_invoice");
        }

        document.querySelector(".has_dropdown_count").innerText = ordersSelected.length;

    });
});

function order_list_check(plc) {
    if ($(plc).is(':checked')) {
        if ($('.lists_checkbox:checked').length == $('.lists_checkbox').length) {
            $("#lists_selectall").prop('checked', true);
        }
        var orderId = $(plc).attr("data-id");
        var orderCount = 0;
        $.each(ordersSelected, function (i) {
            if (this == orderId) {
                orderCount++;
                return;
            }
        });
        if (orderCount == 0) {
            ordersSelected.push(orderId);
        }
    }
    else {
        if ($("#lists_selectall").is(':checked')) {
            $("#lists_selectall").prop('checked', false);
        }
        var orderId = $(plc).attr("data-id");
        $.each(ordersSelected, function (i) {
            if (this == orderId) {
                ordersSelected.splice(i, 1);
            }
        });
    }

    if (ordersSelected.length >= 1) {
        document.querySelector(".table_hidden_buttons_section").style.display = "block";
    } else {
        document.querySelector(".table_hidden_buttons_section").style.display = "none";
    }

    if (ordersSelected.length > 1) {
        hideById("dropdown_menu_view_single");
    } else {
        showById("dropdown_menu_view_single");
    }

    if (ordersSelected.length > 10) {
        hideById("dropdown_print_invoice");
    } else {
        showById("dropdown_print_invoice");
    }

    document.querySelector(".has_dropdown_count").innerText = ordersSelected.length;


    
}




$(document).ready(function () {
    $(document).on("contextmenu", ".lists_table_items:not([data-updating='true'])", function (event) {
        event.preventDefault();

        var pageYPosition = event.pageY - 40;

        $(".order_list_custom_menu").finish().show(100).

            // In the right position (the mouse)
            css({
                top: pageYPosition + "px",
                left: event.pageX + "px"
            });

        var orderUrl = $(this).find(".list_table_url a").attr("href");
        $(".order_list_custom_menu_view").attr("href", orderUrl);

        $(".order_list_custom_menu_addTag_inner span").remove();

        var orderId = $(this).attr("data-id");

        $("#order_list_custom_menu_dispatch_email").attr("data-id", orderId);
        $("#order_list_custom_menu_print_invoice").attr("data-id", orderId);

        if ($(this).find(".list_table_tags span").length > 0) {
            var tagArray = [];


            $(this).find(".list_table_tags span").each(function () {
                tagArray.push($(this).attr("data-tagId"));
            });

            $.each(orderTags, function () {
                if ($.inArray(this.id, tagArray) != -1) {

                } else {
                    $(".order_list_custom_menu_addTag_inner").append('<span onclick="addOrderTag(this)" data-tagO="' + orderId + '" data-tagId="' + this.id + '"><div class="order_list_custom_menu_addTag_inner_box" style="background-color:' + this.colour + ';"></div>' + this.tag + '</span>');
                }
            });

        } else {
            $.each(orderTags, function () {
                $(".order_list_custom_menu_addTag_inner").append('<span onclick="addOrderTag(this)" data-tagO="' + orderId + '" data-tagId="' + this.id + '"><div class="order_list_custom_menu_addTag_inner_box" style="background-color:' + this.colour + ';"></div>' + this.tag + '</span>');
            });
        }


        $(".order_list_custom_menu_editTag_inner span").remove();

        if ($(this).find(".list_table_tags span").length > 0) {
            $(".order_list_custom_menu_editTag").removeClass("order_list_custom_menu_hide");

            $(this).find(".list_table_tags span").each(function () {
                var tagName = $(this).text();
                var tagStyle = $(this).attr("style");
                var tagId = $(this).attr("data-tagId");
                $(".order_list_custom_menu_editTag_inner").append('<span onclick="removeOrderTag(this)" data-tagO="' + orderId + '" data-tagId="' + tagId + '"><div class="order_list_custom_menu_editTag_inner_box" style="' + tagStyle + '"></div>' + tagName + '</span>');
            });

        } else {
            $(".order_list_custom_menu_editTag").addClass("order_list_custom_menu_hide");
        }

    });

    $(document).bind("mousedown", function (e) {
        if (!$(e.target).parents(".order_list_custom_menu").length > 0) {
            $(".order_list_custom_menu").hide(100);
        }
    });

});


function addFluxSpinner(orderId) {
    $(".lists_table_items[data-id='" + orderId + "']").attr("data-updating", "true");
    $(".lists_table_items[data-id='" + orderId + "']").attr("data-error", "false");
    
    ordersInFluxUpdate.push(orderId.toString());
    checkFluxChangeStart();
}


function Kashflow(user, info) {

    $(".modal_uploading_kashflow, .modal_overlay").fadeIn();
    $("body").addClass("body_modal_is_open");
    $("#modal_uploading_kashflow1, .busy_wait_uploading_kashflow").show();
    $("#modal_uploading_kashflow2, #modal_uploading_kashflow2_content2").hide();
    axiosGet('services/Orders.svc/UploadKashflow?storeId=' + user + "&data=" + info).then(function (data) {
        var kashflow = data.d || data;

        $("#modal_uploading_kashflow1, .busy_wait_uploading_kashflow").hide();
        $("#modal_uploading_kashflow2").show();
        $("#modal_uploading_kashflow2_content1").html(kashflow);

        if (kashflow == "Incorrect username or password") {
            $("#modal_uploading_kashflow2_content2").show();
        }
    }).catch(function (e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function () {

    });
}

$("#txtQuickSearch").keyup(function () {
    txtQuickSearch();
});
$("#txtQuickSearch").click(function () {
    txtQuickSearch();
});

function txtQuickSearch() {
    delay(function () {
        var q = $("#txtQuickSearch").val();
        q = stripHTML(q);
        $("#quicksearch_results").addClass("quicksearch_results_active");

        if (q.length < 3) {
            $("#quicksearch_results").removeClass("quicksearch_results_active");
            return;
        } else {
            QuickProductSearch(q);
        }

    }, 400);
}

var delay = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();

function QuickProductSearch(q) {
    $(".busy_wait_product_list_search").show();

    var start = 0;
    var pgsize = 30;
    axiosGet("/services/Orders.svc/quickSearch?storeId=" + storeId + "&q=" + q + "&start=" + start + "&pgsize=" + pgsize).then(function (data) {
        var search = data.d || data;
        console.log(search);

        if (search.found == 10)
            $("#quicksearch_results").html("<div class='quicksearch_results_message quicksearch_results_message_number'>Found: <strong>" + search.found + " results</strong> in " + search.duration + "ms for \"<strong>" + search.query + "</strong>\"<a></a></div>");
        else
            $("#quicksearch_results").html("<div class='quicksearch_results_message quicksearch_results_message_number'>Found: <strong>" + search.found + " results</strong> in " + search.duration + "ms for \"<strong>" + search.query + "</strong>\"</div>");

        if (search.found > 0) {

            $.each(search.list, function () {
                console.log(this);
                $("#quicksearch_results").append("<li class='quicksearch_results_item'>" +
                    "<a href=\"orders_item.aspx?oid=" + $(this)[0].Key + "\" class='hide_overflow'>" +
                    "<div class='quicksearch_results_item_text'>" +
                    "<div class='quicksearch_results_item_text1'>#" + $(this)[0].Value[0] + " - " + $(this)[0].Value[1] + "</div>" +
                    "<div class='quicksearch_results_item_text2 color_dgrey'>" + GetDateString($(this)[0].Value[2]) + "</div>" +
                    "<div class='quicksearch_results_item_text2'>" + $(this)[0].Value[3] + "</div>" +
                    "</div>" +
                    "</a>" +
                    "</li>");
            });
        }
    }).catch(function (e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function () {
        $(".busy_wait_product_list_search").hide();
    });
}

function loadOrderTags(oid) {
    axiosGet('services/Orders.svc/getOrderTags?storeId=' + storeId + '&orderId=' + oid).then(function (data) {
        var tagsArray = data.d || data;

        $.each(tagsArray, function () {

            var mytag = getTag(this.tagid);

            if (mytag !== null)
                $("#tags_list_" + oid).append("<span style='background-color:" + mytag.colour + "' data-color='" + mytag.colour + "'data-tagID='" + mytag.id + "'>" + mytag.tag + "</span>");

        });
    }).catch(function (e) {
        $("#error_detail").text(e);
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function () {

    });
}

function setStatus(id, status) {

    axiosGet('services/Orders.svc/setStatus?storeId=' + storeId + "&data=" + id + "&status=" + status).then(function (data) {

        var failedOrders = data.d;
        var allOrdersSetStatus = id;
        allOrdersSetStatus = JSON.parse(allOrdersSetStatus);
        for (var i = 0; i < allOrdersSetStatus.length; i++) {
            addFluxSpinner(allOrdersSetStatus[i].id);
        }

        if (failedOrders != null) {
            if (failedOrders.length > 0) {
                for (var i = 0; i < failedOrders.length; i++) {
                    $(".lists_table_items[data-id='" + failedOrders[i] + "']").attr("data-updating", "false");
                    $(".lists_table_items[data-id='" + failedOrders[i] + "']").attr("data-error", "true");
                }
            }
        }

    }).catch(function (err) {

        var failedOrders = id;

        if (failedOrders != null) {
            failedOrders = JSON.parse(failedOrders);
            if (failedOrders.length > 0) {
                for (var i = 0; i < failedOrders.length; i++) {
                    $(".lists_table_items[data-id='" + failedOrders[i].id + "']").attr("data-updating", "false");
                    $(".lists_table_items[data-id='" + failedOrders[i].id + "']").attr("data-error", "true");
                }
            }
        }

    }).then(function () {

    });

}

function dropdownMarkStatus(type) {
    var markStatus = new Array();

    for (var i = 0; i < ordersSelected.length; i++) {
        markStatus.push({ id: ordersSelected[i] });
        $(".lists_table_items[data-id='" + ordersSelected[i] + "']").attr("data-updating", "true");
        $('#lists_select' + ordersSelected[i] + ':checkbox').prop("checked", false);
    }

    switch (type) {
        case "closed":
            setStatus(JSON.stringify(markStatus), 2);
            break;
        case "problem":
            setStatus(JSON.stringify(markStatus), 15);
            break;
        default:
            setStatus(JSON.stringify(markStatus), 1);
            break;
    }

    ordersSelected = new Array();

    hideByQuery("#lists_orders_table .table_hidden_buttons_section");

}


var sendKashflow;
function dropdownSendKashflow() {
    sendKashflow = new Array();
    $.each(ordersSelected, function () {
        sendKashflow.push({ id: this });
    });
    Kashflow(storeId, JSON.stringify(sendKashflow));
}
function downloadDataUrlFromJavascript(filename, dataUrl) {

    // Construct the a element
    var link = document.createElement("a");
    link.download = filename;
    link.target = "_blank";

    // Construct the uri
    link.href = dataUrl;
    document.body.appendChild(link);
    link.click();

    // Cleanup the DOM
    document.body.removeChild(link);
    delete link;
}
var printInvoice;

function dropdownPrintInvoiceRightClick() {
    var id = $("#order_list_custom_menu_print_invoice").attr("data-id");
    ordersSelected = [id];
    dropdownPrintInvoice();
}

function dropdownSendKashflowRightClick() {
	var id = $("#order_list_custom_menu_print_invoice").attr("data-id");
	ordersSelected = [id];
	dropdownSendKashflow();
}

function dropdownPrintInvoice() {
    printInvoice = new Array();
    var oids = "";
    for (var i = 0; i < ordersSelected.length; i++) {
        oids += ordersSelected[i] + ",";
    }

    var url = "/PrintSelectedInvoices.aspx?oids=" + oids + "&sk=" + storeId + "&type=0";
    window.open(url, '_blank', '', false);
}

function dropdownDownloadInvoice() {

    divFadeIn(".modal_invoices_downloading", ".modal_overlay");

    printInvoice = new Array();
    var oids = "";
    for (var i = 0; i < ordersSelected.length; i++) {
        oids += ordersSelected[i] + ",";
    }

    var url = "/PrintSelectedInvoices.aspx?oids=" + oids + "&sk=" + storeId + "&type=1";
    window.open(url, '_top', '', false);
}


var checkFluxChangeLoaded = false;
function checkFluxChangeStart() {
    if (checkFluxChangeLoaded === false) {
        checkFluxChangeLoaded = true;
        setTimeout(function () {
            checkFluxChange();
        }, 10000);
    }
}


var checkFluxChangeCount = 0;
var checkFluxChangeTime = 10000;
var checkFlux;
function checkFluxChange() {

    sort = $("#dlSort").val();

    var status = "";

    var whichType = document.querySelector(".tab_nav_item.selected").getAttribute("data-tab");

    if (whichType == "1") {
        status = "all";
    }
    else if (whichType == "2") {
        status = "open";
    }
    else if (whichType == "3") {
        status = "closed";
    } else if (whichType == "4") {
        status = "problem";
    }

    var fields = "";

    //we need to request certain fields if we wish to use them
    if ($("input[id='order_list_attributes_item0']").is(":checked")) { fields += "tags,"; }
    if ($("input[id='order_list_attributes_item5']").is(":checked")) { fields += "customer,"; }

    //remove the last comma
    fields = fields.replace(/,\s*$/, "");

    //let's see if any tags are being filtered...
    var tags = "";

    if (filters != null) {
        for (var i = 0; i < filters.length; i++) {
            tags += filters[i] + ",";
        }
    }

    //remove the last comma
    tags = tags.replace(/,\s*$/, "");

    axiosGet("/services/Orders.svc/listOrdersNew?storeId=" + storeId + "&sort=" + sort + "&status=" + status + "&limit=" + $("#dlSize").val() + "&fields=" + fields + "&tags=" + tags + "&offset=" + orderstartpg).then(function (data) {

        checkFlux = data.d || data;
        console.log(checkFlux);
        ordersInFlux(checkFlux);

    }).catch(function (e) {
        typeof e === "object" ? beaver.error(JSON.stringify(e)) : typeof e === "string" ? beaver.error(e) : beaver.error(JSON.stringify(e))
    }).then(function () {
        if (checkFluxChangeCount > 9) {
            checkFluxChangeTime = 60000;
        } else if (checkFluxChangeCount > 5) {
            checkFluxChangeTime = 30000;
        } else if (checkFluxChangeCount > 2) {
            checkFluxChangeTime = 20000;
        }

        if (checkFluxChangeCount < 19) {
            checkFluxChangeCall(checkFluxChangeTime);
        }
    });

}

function checkFluxChangeCall(checkFluxChangeTime) {
    setTimeout(function () {
        checkFluxChangeCount++;
        checkFluxChange();
    }, checkFluxChangeTime);
}




function ordersInFlux(orders) {

    // Updating
    if (orders.orders.length && ordersInFluxUpdate.length > 0) {

        $.each(orders.orders, function () {
            if (this.flux == null) {

                if (ordersInFluxUpdate.indexOf(this.id) >= 0) {

                    $(".lists_table_items[data-id='" + this.id + "']").attr("data-updating", "false");

                    var ordersInFluxUpdateIndex = ordersInFluxUpdate.indexOf(this.id);
                    if (ordersInFluxUpdateIndex > -1) {
                        ordersInFluxUpdate.splice(ordersInFluxUpdateIndex, 1);
                    }

                    orderFluxUpdateCompleted(this);
                }

            }
        });

    }

    // Deleting
    if (orders.orders.length && ordersInFluxDelete.length > 0) {

        for (var i = 0; i < ordersInFluxDelete.length; i++) {

            var id = ordersInFluxDelete[i];

            var orderFound = orders.orders.filter(function (obj) {
                return obj.id === id;
            })

            if (orderFound.length === 0) {
                var ordersInFluxDeleteIndex = ordersInFluxDelete.indexOf(id);
                if (ordersInFluxDeleteIndex > -1) {
                    ordersInFluxDelete.splice(ordersInFluxDeleteIndex, 1);
                }
                $(".lists_table_items[data-id='" + id + "'] .list_table_url a").text("Deleted");
                $(".lists_table_items[data-id='" + id + "']").attr("data-updating", "false");
                $(".lists_table_items[data-id='" + id + "']").attr("data-delete", "true");
            }


        }

    }


}



function orderFluxUpdateCompleted(order) {
    console.log(orders.orders);
    var id = order.id;

    // Tags

    var tags = "";
    var allCurrentTags = new Array();

    $.each(order.tags, function (key, value) {

        var mytag = getTag(value);
        if (mytag !== null) {
            allCurrentTags.push({ "id": mytag.id })
            tags += "<span onclick='orderTagSelect(\"" + mytag.id + "\", \"" + mytag.colour + "\")' style='background-color:" + mytag.colour + "' data-color='" + mytag.colour + "'data-tagID='" + mytag.id + "'>" + mytag.tag + "</span>";
        }
    });

    $(".lists_table_items[data-id='" + id + "'] .list_table_tags").html(tags);

    // Status

    if (order.status === 1) {
        var status = "<span onclick='orderStatusSelect(\"1\")'>Open</span>";
        var statusClass = "list_table_status_open";
        var statusOnclick = "orderStatusSelect(\"1\")";
    } else if (order.status === 2) {
        var status = "<span>Closed</span>";
        var statusClass = "list_table_status_closed";
        var statusOnclick = "orderStatusSelect(\"2\")";
    } else {
        var status = "<span>Problem</span>";
        var statusClass = "list_table_status_problem";
        var statusOnclick = "orderStatusSelect(\"3\")";
    }

    $(".lists_table_items[data-id='" + id + "'] .list_table_status").removeClass("list_table_status_open list_table_status_closed list_table_status_problem");
    $(".lists_table_items[data-id='" + id + "'] .list_table_status").addClass(statusClass);
    $(".lists_table_items[data-id='" + id + "'] .list_table_status").attr("onclick", statusOnclick);
    $(".lists_table_items[data-id='" + id + "'] .list_table_status").html(status);

    // Dispatch Email

    var dispatch = '<div class="order_dispatch_button has_tool_tip" onclick="LoadOrderDispatchIconButton(\'' + id + '\');"><span class="tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small">The dispatch email for this order has <strong>NOT</strong> been sent. Click to send the dispatch email.</span><i class="fa fa-envelope-o" aria-hidden="true"></i></div>';
    if (order.isdispatched) {
        dispatch = '<div class="order_dispatch_button has_tool_tip order_dispatch_button_active" onclick="LoadOrderDispatchIconButton(\'' + id + '\');"><span class="tool_tip tool_tip_top tool_tip_dgrey tool_tip_top_small">The dispatch email for this order <strong>HAS</strong> been sent.</span><i class="fa fa-envelope-o" aria-hidden="true"></i></div>';
    }

    $(".lists_table_items[data-id='" + id + "'] .list_table_dispatch").html(dispatch);

    orders.orders.filter(function (obj) {
        if (JSON.stringify(obj.id) == JSON.stringify(id)) {
            obj.status = order.status;
        }
    });

}


function viewTab() {
    if (ordersSelected.length > 0) {
        for (var i = 0; i < ordersSelected.length; i++) {
            var url = "orders_item.aspx?oid=" + ordersSelected[i];
            window.open(url, "_blank");
        }
    }
}

function viewSingle() {
    if (ordersSelected.length > 0) {
        var url = "orders_item.aspx?oid=" + ordersSelected[0];
        window.open(url, "_self");
    }
}



function ordersClearAllFilters() {

    $(".applied_tags_button_item").each(function () {

        var tagid = $(this).attr("data-id");

        if (document.querySelector("#applied_tags #tag_" + tagid) != null) {
            if (tagid == "new") {
                window.history.replaceState({}, "", "orders_view_list");
            }

            // Remove tag from local filter array
            var filtersArrayIndex = filters.indexOf(tagid);
            if (filtersArrayIndex > -1) {
                filters.splice(filtersArrayIndex, 1);
            }

            // Remove tag from Cookie Filter array
            if (Cookies.get('fwsOrderListApplyFilters_' + storeId)) {
                var existingCookieFilters = Cookies.get("fwsOrderListApplyFilters_" + storeId);
                existingCookieFilters = JSON.parse(existingCookieFilters);
                var existingFiltersArrayIndex = existingCookieFilters.indexOf(tagid);
                if (existingFiltersArrayIndex > -1) {
                    existingCookieFilters.splice(existingFiltersArrayIndex, 1);
                }
                Cookies.set('fwsOrderListApplyFilters_' + storeId, existingCookieFilters);
            }

            document.querySelector("#applied_tags #tag_" + tagid).remove();

            if (!document.querySelector("#applied_tags a")) {
                hideById("applied_tags");
            }

            
        }

    });
    orderstartpg = 0;
    orderStatusSelect('0');

}




ready(function () {
    window.onerror = function (message, source, lineno, colno, error) {
        var string = message.toLowerCase();
        var substring = "script error";
        if (string.indexOf(substring) === -1) {
            var builtMsg = [
                'Message: ' + message,
                'URL: ' + source,
                'Line: ' + lineno,
                'Column: ' + colno,
                'Error object: ' + JSON.stringify(error)
            ].join(' - ');
            beaver.error("", builtMsg);
        }
        return false;
    };
});